{"dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1685934625119},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\base64-js\\package.json","includedInParent":true,"mtime":1684371838227}],"generated":{"js":"'use strict'\r\n\r\nexports.byteLength = byteLength\r\nexports.toByteArray = toByteArray\r\nexports.fromByteArray = fromByteArray\r\n\r\nvar lookup = []\r\nvar revLookup = []\r\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\r\n\r\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\r\nfor (var i = 0, len = code.length; i < len; ++i) {\r\n  lookup[i] = code[i]\r\n  revLookup[code.charCodeAt(i)] = i\r\n}\r\n\r\n// Support decoding URL-safe base64 strings, as Node.js does.\r\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\r\nrevLookup['-'.charCodeAt(0)] = 62\r\nrevLookup['_'.charCodeAt(0)] = 63\r\n\r\nfunction getLens (b64) {\r\n  var len = b64.length\r\n\r\n  if (len % 4 > 0) {\r\n    throw new Error('Invalid string. Length must be a multiple of 4')\r\n  }\r\n\r\n  // Trim off extra bytes after placeholder bytes are found\r\n  // See: https://github.com/beatgammit/base64-js/issues/42\r\n  var validLen = b64.indexOf('=')\r\n  if (validLen === -1) validLen = len\r\n\r\n  var placeHoldersLen = validLen === len\r\n    ? 0\r\n    : 4 - (validLen % 4)\r\n\r\n  return [validLen, placeHoldersLen]\r\n}\r\n\r\n// base64 is 4/3 + up to two characters of the original data\r\nfunction byteLength (b64) {\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction _byteLength (b64, validLen, placeHoldersLen) {\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction toByteArray (b64) {\r\n  var tmp\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n\r\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\r\n\r\n  var curByte = 0\r\n\r\n  // if there are placeholders, only get up to the last complete 4 chars\r\n  var len = placeHoldersLen > 0\r\n    ? validLen - 4\r\n    : validLen\r\n\r\n  var i\r\n  for (i = 0; i < len; i += 4) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 18) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\r\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\r\n      revLookup[b64.charCodeAt(i + 3)]\r\n    arr[curByte++] = (tmp >> 16) & 0xFF\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 2) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 2) |\r\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 1) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 10) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\r\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction tripletToBase64 (num) {\r\n  return lookup[num >> 18 & 0x3F] +\r\n    lookup[num >> 12 & 0x3F] +\r\n    lookup[num >> 6 & 0x3F] +\r\n    lookup[num & 0x3F]\r\n}\r\n\r\nfunction encodeChunk (uint8, start, end) {\r\n  var tmp\r\n  var output = []\r\n  for (var i = start; i < end; i += 3) {\r\n    tmp =\r\n      ((uint8[i] << 16) & 0xFF0000) +\r\n      ((uint8[i + 1] << 8) & 0xFF00) +\r\n      (uint8[i + 2] & 0xFF)\r\n    output.push(tripletToBase64(tmp))\r\n  }\r\n  return output.join('')\r\n}\r\n\r\nfunction fromByteArray (uint8) {\r\n  var tmp\r\n  var len = uint8.length\r\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\r\n  var parts = []\r\n  var maxChunkLength = 16383 // must be multiple of 3\r\n\r\n  // go through the array every three bytes, we'll deal with trailing stuff later\r\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\r\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\r\n  }\r\n\r\n  // pad the end with zeros, but make sure to not forget the extra bytes\r\n  if (extraBytes === 1) {\r\n    tmp = uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 2] +\r\n      lookup[(tmp << 4) & 0x3F] +\r\n      '=='\r\n    )\r\n  } else if (extraBytes === 2) {\r\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 10] +\r\n      lookup[(tmp >> 4) & 0x3F] +\r\n      lookup[(tmp << 2) & 0x3F] +\r\n      '='\r\n    )\r\n  }\r\n\r\n  return parts.join('')\r\n}\r\n","map":{"mappings":[{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"..\\..\\node_modules\\base64-js\\index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}}],"sources":{"..\\..\\node_modules\\base64-js\\index.js":"'use strict'\r\n\r\nexports.byteLength = byteLength\r\nexports.toByteArray = toByteArray\r\nexports.fromByteArray = fromByteArray\r\n\r\nvar lookup = []\r\nvar revLookup = []\r\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\r\n\r\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\r\nfor (var i = 0, len = code.length; i < len; ++i) {\r\n  lookup[i] = code[i]\r\n  revLookup[code.charCodeAt(i)] = i\r\n}\r\n\r\n// Support decoding URL-safe base64 strings, as Node.js does.\r\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\r\nrevLookup['-'.charCodeAt(0)] = 62\r\nrevLookup['_'.charCodeAt(0)] = 63\r\n\r\nfunction getLens (b64) {\r\n  var len = b64.length\r\n\r\n  if (len % 4 > 0) {\r\n    throw new Error('Invalid string. Length must be a multiple of 4')\r\n  }\r\n\r\n  // Trim off extra bytes after placeholder bytes are found\r\n  // See: https://github.com/beatgammit/base64-js/issues/42\r\n  var validLen = b64.indexOf('=')\r\n  if (validLen === -1) validLen = len\r\n\r\n  var placeHoldersLen = validLen === len\r\n    ? 0\r\n    : 4 - (validLen % 4)\r\n\r\n  return [validLen, placeHoldersLen]\r\n}\r\n\r\n// base64 is 4/3 + up to two characters of the original data\r\nfunction byteLength (b64) {\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction _byteLength (b64, validLen, placeHoldersLen) {\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction toByteArray (b64) {\r\n  var tmp\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n\r\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\r\n\r\n  var curByte = 0\r\n\r\n  // if there are placeholders, only get up to the last complete 4 chars\r\n  var len = placeHoldersLen > 0\r\n    ? validLen - 4\r\n    : validLen\r\n\r\n  var i\r\n  for (i = 0; i < len; i += 4) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 18) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\r\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\r\n      revLookup[b64.charCodeAt(i + 3)]\r\n    arr[curByte++] = (tmp >> 16) & 0xFF\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 2) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 2) |\r\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 1) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 10) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\r\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction tripletToBase64 (num) {\r\n  return lookup[num >> 18 & 0x3F] +\r\n    lookup[num >> 12 & 0x3F] +\r\n    lookup[num >> 6 & 0x3F] +\r\n    lookup[num & 0x3F]\r\n}\r\n\r\nfunction encodeChunk (uint8, start, end) {\r\n  var tmp\r\n  var output = []\r\n  for (var i = start; i < end; i += 3) {\r\n    tmp =\r\n      ((uint8[i] << 16) & 0xFF0000) +\r\n      ((uint8[i + 1] << 8) & 0xFF00) +\r\n      (uint8[i + 2] & 0xFF)\r\n    output.push(tripletToBase64(tmp))\r\n  }\r\n  return output.join('')\r\n}\r\n\r\nfunction fromByteArray (uint8) {\r\n  var tmp\r\n  var len = uint8.length\r\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\r\n  var parts = []\r\n  var maxChunkLength = 16383 // must be multiple of 3\r\n\r\n  // go through the array every three bytes, we'll deal with trailing stuff later\r\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\r\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\r\n  }\r\n\r\n  // pad the end with zeros, but make sure to not forget the extra bytes\r\n  if (extraBytes === 1) {\r\n    tmp = uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 2] +\r\n      lookup[(tmp << 4) & 0x3F] +\r\n      '=='\r\n    )\r\n  } else if (extraBytes === 2) {\r\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 10] +\r\n      lookup[(tmp >> 4) & 0x3F] +\r\n      lookup[(tmp << 2) & 0x3F] +\r\n      '='\r\n    )\r\n  }\r\n\r\n  return parts.join('')\r\n}\r\n"},"lineCount":151}},"hash":"5c02de853ab608962d572ae710a46953","cacheData":{"env":{}}}