{"id":"../../node_modules/hash.js/lib/hash/hmac.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\package.json","includedInParent":true,"mtime":1684371848082},{"name":"./utils","loc":{"line":3,"column":20,"index":37},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\lib\\hash\\hmac.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\lib\\hash\\utils.js"},{"name":"minimalistic-assert","loc":{"line":4,"column":21,"index":71},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\lib\\hash\\hmac.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\minimalistic-assert\\index.js"}],"generated":{"js":"'use strict';\r\n\r\nvar utils = require('./utils');\r\nvar assert = require('minimalistic-assert');\r\n\r\nfunction Hmac(hash, key, enc) {\r\n  if (!(this instanceof Hmac))\r\n    return new Hmac(hash, key, enc);\r\n  this.Hash = hash;\r\n  this.blockSize = hash.blockSize / 8;\r\n  this.outSize = hash.outSize / 8;\r\n  this.inner = null;\r\n  this.outer = null;\r\n\r\n  this._init(utils.toArray(key, enc));\r\n}\r\nmodule.exports = Hmac;\r\n\r\nHmac.prototype._init = function init(key) {\r\n  // Shorten key, if needed\r\n  if (key.length > this.blockSize)\r\n    key = new this.Hash().update(key).digest();\r\n  assert(key.length <= this.blockSize);\r\n\r\n  // Add padding to key\r\n  for (var i = key.length; i < this.blockSize; i++)\r\n    key.push(0);\r\n\r\n  for (i = 0; i < key.length; i++)\r\n    key[i] ^= 0x36;\r\n  this.inner = new this.Hash().update(key);\r\n\r\n  // 0x36 ^ 0x5c = 0x6a\r\n  for (i = 0; i < key.length; i++)\r\n    key[i] ^= 0x6a;\r\n  this.outer = new this.Hash().update(key);\r\n};\r\n\r\nHmac.prototype.update = function update(msg, enc) {\r\n  this.inner.update(msg, enc);\r\n  return this;\r\n};\r\n\r\nHmac.prototype.digest = function digest(enc) {\r\n  this.outer.update(this.inner.digest());\r\n  return this.outer.digest(enc);\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/hmac.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"../../node_modules/hash.js/lib/hash/hmac.js":"'use strict';\r\n\r\nvar utils = require('./utils');\r\nvar assert = require('minimalistic-assert');\r\n\r\nfunction Hmac(hash, key, enc) {\r\n  if (!(this instanceof Hmac))\r\n    return new Hmac(hash, key, enc);\r\n  this.Hash = hash;\r\n  this.blockSize = hash.blockSize / 8;\r\n  this.outSize = hash.outSize / 8;\r\n  this.inner = null;\r\n  this.outer = null;\r\n\r\n  this._init(utils.toArray(key, enc));\r\n}\r\nmodule.exports = Hmac;\r\n\r\nHmac.prototype._init = function init(key) {\r\n  // Shorten key, if needed\r\n  if (key.length > this.blockSize)\r\n    key = new this.Hash().update(key).digest();\r\n  assert(key.length <= this.blockSize);\r\n\r\n  // Add padding to key\r\n  for (var i = key.length; i < this.blockSize; i++)\r\n    key.push(0);\r\n\r\n  for (i = 0; i < key.length; i++)\r\n    key[i] ^= 0x36;\r\n  this.inner = new this.Hash().update(key);\r\n\r\n  // 0x36 ^ 0x5c = 0x6a\r\n  for (i = 0; i < key.length; i++)\r\n    key[i] ^= 0x6a;\r\n  this.outer = new this.Hash().update(key);\r\n};\r\n\r\nHmac.prototype.update = function update(msg, enc) {\r\n  this.inner.update(msg, enc);\r\n  return this;\r\n};\r\n\r\nHmac.prototype.digest = function digest(enc) {\r\n  this.outer.update(this.inner.digest());\r\n  return this.outer.digest(enc);\r\n};\r\n"},"lineCount":48}},"error":null,"hash":"11c19fae84a59ebbf5364dc05a0a49b1","cacheData":{"env":{}}}