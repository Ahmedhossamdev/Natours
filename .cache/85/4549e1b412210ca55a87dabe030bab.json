{"id":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\package.json","includedInParent":true,"mtime":1684371843179},{"name":"hash.js","loc":{"line":3,"column":19,"index":36},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\lib\\elliptic\\eddsa\\index.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\lib\\hash.js"},{"name":"../curves","loc":{"line":4,"column":21,"index":70},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\lib\\elliptic\\eddsa\\index.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\lib\\elliptic\\curves.js"},{"name":"../utils","loc":{"line":5,"column":20,"index":105},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\lib\\elliptic\\eddsa\\index.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\lib\\elliptic\\utils.js"},{"name":"./key","loc":{"line":8,"column":22,"index":205},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\lib\\elliptic\\eddsa\\index.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\lib\\elliptic\\eddsa\\key.js"},{"name":"./signature","loc":{"line":9,"column":24,"index":240},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\lib\\elliptic\\eddsa\\index.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\lib\\elliptic\\eddsa\\signature.js"}],"generated":{"js":"'use strict';\r\n\r\nvar hash = require('hash.js');\r\nvar curves = require('../curves');\r\nvar utils = require('../utils');\r\nvar assert = utils.assert;\r\nvar parseBytes = utils.parseBytes;\r\nvar KeyPair = require('./key');\r\nvar Signature = require('./signature');\r\n\r\nfunction EDDSA(curve) {\r\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\r\n\r\n  if (!(this instanceof EDDSA))\r\n    return new EDDSA(curve);\r\n\r\n  curve = curves[curve].curve;\r\n  this.curve = curve;\r\n  this.g = curve.g;\r\n  this.g.precompute(curve.n.bitLength() + 1);\r\n\r\n  this.pointClass = curve.point().constructor;\r\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\r\n  this.hash = hash.sha512;\r\n}\r\n\r\nmodule.exports = EDDSA;\r\n\r\n/**\r\n* @param {Array|String} message - message bytes\r\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\r\n* @returns {Signature} - signature\r\n*/\r\nEDDSA.prototype.sign = function sign(message, secret) {\r\n  message = parseBytes(message);\r\n  var key = this.keyFromSecret(secret);\r\n  var r = this.hashInt(key.messagePrefix(), message);\r\n  var R = this.g.mul(r);\r\n  var Rencoded = this.encodePoint(R);\r\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\r\n    .mul(key.priv());\r\n  var S = r.add(s_).umod(this.curve.n);\r\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\r\n};\r\n\r\n/**\r\n* @param {Array} message - message bytes\r\n* @param {Array|String|Signature} sig - sig bytes\r\n* @param {Array|String|Point|KeyPair} pub - public key\r\n* @returns {Boolean} - true if public key matches sig of message\r\n*/\r\nEDDSA.prototype.verify = function verify(message, sig, pub) {\r\n  message = parseBytes(message);\r\n  sig = this.makeSignature(sig);\r\n  var key = this.keyFromPublic(pub);\r\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\r\n  var SG = this.g.mul(sig.S());\r\n  var RplusAh = sig.R().add(key.pub().mul(h));\r\n  return RplusAh.eq(SG);\r\n};\r\n\r\nEDDSA.prototype.hashInt = function hashInt() {\r\n  var hash = this.hash();\r\n  for (var i = 0; i < arguments.length; i++)\r\n    hash.update(arguments[i]);\r\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\r\n};\r\n\r\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\r\n  return KeyPair.fromPublic(this, pub);\r\n};\r\n\r\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\r\n  return KeyPair.fromSecret(this, secret);\r\n};\r\n\r\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\r\n  if (sig instanceof Signature)\r\n    return sig;\r\n  return new Signature(this, sig);\r\n};\r\n\r\n/**\r\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\r\n*\r\n* EDDSA defines methods for encoding and decoding points and integers. These are\r\n* helper convenience methods, that pass along to utility functions implied\r\n* parameters.\r\n*\r\n*/\r\nEDDSA.prototype.encodePoint = function encodePoint(point) {\r\n  var enc = point.getY().toArray('le', this.encodingLength);\r\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\r\n  return enc;\r\n};\r\n\r\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\r\n  bytes = utils.parseBytes(bytes);\r\n\r\n  var lastIx = bytes.length - 1;\r\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\r\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\r\n\r\n  var y = utils.intFromLE(normed);\r\n  return this.curve.pointFromY(y, xIsOdd);\r\n};\r\n\r\nEDDSA.prototype.encodeInt = function encodeInt(num) {\r\n  return num.toArray('le', this.encodingLength);\r\n};\r\n\r\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\r\n  return utils.intFromLE(bytes);\r\n};\r\n\r\nEDDSA.prototype.isPoint = function isPoint(val) {\r\n  return val instanceof this.pointClass;\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/eddsa/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}}],"sources":{"../../node_modules/elliptic/lib/elliptic/eddsa/index.js":"'use strict';\r\n\r\nvar hash = require('hash.js');\r\nvar curves = require('../curves');\r\nvar utils = require('../utils');\r\nvar assert = utils.assert;\r\nvar parseBytes = utils.parseBytes;\r\nvar KeyPair = require('./key');\r\nvar Signature = require('./signature');\r\n\r\nfunction EDDSA(curve) {\r\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\r\n\r\n  if (!(this instanceof EDDSA))\r\n    return new EDDSA(curve);\r\n\r\n  curve = curves[curve].curve;\r\n  this.curve = curve;\r\n  this.g = curve.g;\r\n  this.g.precompute(curve.n.bitLength() + 1);\r\n\r\n  this.pointClass = curve.point().constructor;\r\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\r\n  this.hash = hash.sha512;\r\n}\r\n\r\nmodule.exports = EDDSA;\r\n\r\n/**\r\n* @param {Array|String} message - message bytes\r\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\r\n* @returns {Signature} - signature\r\n*/\r\nEDDSA.prototype.sign = function sign(message, secret) {\r\n  message = parseBytes(message);\r\n  var key = this.keyFromSecret(secret);\r\n  var r = this.hashInt(key.messagePrefix(), message);\r\n  var R = this.g.mul(r);\r\n  var Rencoded = this.encodePoint(R);\r\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\r\n    .mul(key.priv());\r\n  var S = r.add(s_).umod(this.curve.n);\r\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\r\n};\r\n\r\n/**\r\n* @param {Array} message - message bytes\r\n* @param {Array|String|Signature} sig - sig bytes\r\n* @param {Array|String|Point|KeyPair} pub - public key\r\n* @returns {Boolean} - true if public key matches sig of message\r\n*/\r\nEDDSA.prototype.verify = function verify(message, sig, pub) {\r\n  message = parseBytes(message);\r\n  sig = this.makeSignature(sig);\r\n  var key = this.keyFromPublic(pub);\r\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\r\n  var SG = this.g.mul(sig.S());\r\n  var RplusAh = sig.R().add(key.pub().mul(h));\r\n  return RplusAh.eq(SG);\r\n};\r\n\r\nEDDSA.prototype.hashInt = function hashInt() {\r\n  var hash = this.hash();\r\n  for (var i = 0; i < arguments.length; i++)\r\n    hash.update(arguments[i]);\r\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\r\n};\r\n\r\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\r\n  return KeyPair.fromPublic(this, pub);\r\n};\r\n\r\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\r\n  return KeyPair.fromSecret(this, secret);\r\n};\r\n\r\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\r\n  if (sig instanceof Signature)\r\n    return sig;\r\n  return new Signature(this, sig);\r\n};\r\n\r\n/**\r\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\r\n*\r\n* EDDSA defines methods for encoding and decoding points and integers. These are\r\n* helper convenience methods, that pass along to utility functions implied\r\n* parameters.\r\n*\r\n*/\r\nEDDSA.prototype.encodePoint = function encodePoint(point) {\r\n  var enc = point.getY().toArray('le', this.encodingLength);\r\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\r\n  return enc;\r\n};\r\n\r\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\r\n  bytes = utils.parseBytes(bytes);\r\n\r\n  var lastIx = bytes.length - 1;\r\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\r\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\r\n\r\n  var y = utils.intFromLE(normed);\r\n  return this.curve.pointFromY(y, xIsOdd);\r\n};\r\n\r\nEDDSA.prototype.encodeInt = function encodeInt(num) {\r\n  return num.toArray('le', this.encodingLength);\r\n};\r\n\r\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\r\n  return utils.intFromLE(bytes);\r\n};\r\n\r\nEDDSA.prototype.isPoint = function isPoint(val) {\r\n  return val instanceof this.pointClass;\r\n};\r\n"},"lineCount":119}},"error":null,"hash":"83be267358e953ba3431ed8508def092","cacheData":{"env":{}}}