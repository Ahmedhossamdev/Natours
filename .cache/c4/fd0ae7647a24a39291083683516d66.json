{"id":"../../node_modules/hash.js/lib/hash/common.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\package.json","includedInParent":true,"mtime":1684371848082},{"name":"./utils","loc":{"line":3,"column":20,"index":37},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\lib\\hash\\common.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\lib\\hash\\utils.js"},{"name":"minimalistic-assert","loc":{"line":4,"column":21,"index":71},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\lib\\hash\\common.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\minimalistic-assert\\index.js"}],"generated":{"js":"'use strict';\r\n\r\nvar utils = require('./utils');\r\nvar assert = require('minimalistic-assert');\r\n\r\nfunction BlockHash() {\r\n  this.pending = null;\r\n  this.pendingTotal = 0;\r\n  this.blockSize = this.constructor.blockSize;\r\n  this.outSize = this.constructor.outSize;\r\n  this.hmacStrength = this.constructor.hmacStrength;\r\n  this.padLength = this.constructor.padLength / 8;\r\n  this.endian = 'big';\r\n\r\n  this._delta8 = this.blockSize / 8;\r\n  this._delta32 = this.blockSize / 32;\r\n}\r\nexports.BlockHash = BlockHash;\r\n\r\nBlockHash.prototype.update = function update(msg, enc) {\r\n  // Convert message to array, pad it, and join into 32bit blocks\r\n  msg = utils.toArray(msg, enc);\r\n  if (!this.pending)\r\n    this.pending = msg;\r\n  else\r\n    this.pending = this.pending.concat(msg);\r\n  this.pendingTotal += msg.length;\r\n\r\n  // Enough data, try updating\r\n  if (this.pending.length >= this._delta8) {\r\n    msg = this.pending;\r\n\r\n    // Process pending data in blocks\r\n    var r = msg.length % this._delta8;\r\n    this.pending = msg.slice(msg.length - r, msg.length);\r\n    if (this.pending.length === 0)\r\n      this.pending = null;\r\n\r\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\r\n    for (var i = 0; i < msg.length; i += this._delta32)\r\n      this._update(msg, i, i + this._delta32);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nBlockHash.prototype.digest = function digest(enc) {\r\n  this.update(this._pad());\r\n  assert(this.pending === null);\r\n\r\n  return this._digest(enc);\r\n};\r\n\r\nBlockHash.prototype._pad = function pad() {\r\n  var len = this.pendingTotal;\r\n  var bytes = this._delta8;\r\n  var k = bytes - ((len + this.padLength) % bytes);\r\n  var res = new Array(k + this.padLength);\r\n  res[0] = 0x80;\r\n  for (var i = 1; i < k; i++)\r\n    res[i] = 0;\r\n\r\n  // Append length\r\n  len <<= 3;\r\n  if (this.endian === 'big') {\r\n    for (var t = 8; t < this.padLength; t++)\r\n      res[i++] = 0;\r\n\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = (len >>> 24) & 0xff;\r\n    res[i++] = (len >>> 16) & 0xff;\r\n    res[i++] = (len >>> 8) & 0xff;\r\n    res[i++] = len & 0xff;\r\n  } else {\r\n    res[i++] = len & 0xff;\r\n    res[i++] = (len >>> 8) & 0xff;\r\n    res[i++] = (len >>> 16) & 0xff;\r\n    res[i++] = (len >>> 24) & 0xff;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n\r\n    for (t = 8; t < this.padLength; t++)\r\n      res[i++] = 0;\r\n  }\r\n\r\n  return res;\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/common.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}}],"sources":{"../../node_modules/hash.js/lib/hash/common.js":"'use strict';\r\n\r\nvar utils = require('./utils');\r\nvar assert = require('minimalistic-assert');\r\n\r\nfunction BlockHash() {\r\n  this.pending = null;\r\n  this.pendingTotal = 0;\r\n  this.blockSize = this.constructor.blockSize;\r\n  this.outSize = this.constructor.outSize;\r\n  this.hmacStrength = this.constructor.hmacStrength;\r\n  this.padLength = this.constructor.padLength / 8;\r\n  this.endian = 'big';\r\n\r\n  this._delta8 = this.blockSize / 8;\r\n  this._delta32 = this.blockSize / 32;\r\n}\r\nexports.BlockHash = BlockHash;\r\n\r\nBlockHash.prototype.update = function update(msg, enc) {\r\n  // Convert message to array, pad it, and join into 32bit blocks\r\n  msg = utils.toArray(msg, enc);\r\n  if (!this.pending)\r\n    this.pending = msg;\r\n  else\r\n    this.pending = this.pending.concat(msg);\r\n  this.pendingTotal += msg.length;\r\n\r\n  // Enough data, try updating\r\n  if (this.pending.length >= this._delta8) {\r\n    msg = this.pending;\r\n\r\n    // Process pending data in blocks\r\n    var r = msg.length % this._delta8;\r\n    this.pending = msg.slice(msg.length - r, msg.length);\r\n    if (this.pending.length === 0)\r\n      this.pending = null;\r\n\r\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\r\n    for (var i = 0; i < msg.length; i += this._delta32)\r\n      this._update(msg, i, i + this._delta32);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nBlockHash.prototype.digest = function digest(enc) {\r\n  this.update(this._pad());\r\n  assert(this.pending === null);\r\n\r\n  return this._digest(enc);\r\n};\r\n\r\nBlockHash.prototype._pad = function pad() {\r\n  var len = this.pendingTotal;\r\n  var bytes = this._delta8;\r\n  var k = bytes - ((len + this.padLength) % bytes);\r\n  var res = new Array(k + this.padLength);\r\n  res[0] = 0x80;\r\n  for (var i = 1; i < k; i++)\r\n    res[i] = 0;\r\n\r\n  // Append length\r\n  len <<= 3;\r\n  if (this.endian === 'big') {\r\n    for (var t = 8; t < this.padLength; t++)\r\n      res[i++] = 0;\r\n\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = (len >>> 24) & 0xff;\r\n    res[i++] = (len >>> 16) & 0xff;\r\n    res[i++] = (len >>> 8) & 0xff;\r\n    res[i++] = len & 0xff;\r\n  } else {\r\n    res[i++] = len & 0xff;\r\n    res[i++] = (len >>> 8) & 0xff;\r\n    res[i++] = (len >>> 16) & 0xff;\r\n    res[i++] = (len >>> 24) & 0xff;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n    res[i++] = 0;\r\n\r\n    for (t = 8; t < this.padLength; t++)\r\n      res[i++] = 0;\r\n  }\r\n\r\n  return res;\r\n};\r\n"},"lineCount":93}},"error":null,"hash":"d1665b8d011d200b92a87dc84653bcb8","cacheData":{"env":{}}}