{"dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1685934625119},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\readable-stream\\package.json","includedInParent":true,"mtime":1684371854682},{"name":"./_stream_duplex","loc":{"line":68,"column":21}},{"name":"core-util-is","loc":{"line":71,"column":33}},{"name":"inherits","loc":{"line":72,"column":24}}],"generated":{"js":"// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// a transform stream is a readable/writable stream where you do\r\n// something with the data.  Sometimes it's called a \"filter\",\r\n// but that's not a great name for it, since that implies a thing where\r\n// some bits pass through, and others are simply ignored.  (That would\r\n// be a valid example of a transform, of course.)\r\n//\r\n// While the output is causally related to the input, it's not a\r\n// necessarily symmetric or synchronous transformation.  For example,\r\n// a zlib stream might take multiple plain-text writes(), and then\r\n// emit a single compressed chunk some time in the future.\r\n//\r\n// Here's how this works:\r\n//\r\n// The Transform stream has all the aspects of the readable and writable\r\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\r\n// internally, and returns false if there's a lot of pending writes\r\n// buffered up.  When you call read(), that calls _read(n) until\r\n// there's enough pending readable data buffered up.\r\n//\r\n// In a transform stream, the written data is placed in a buffer.  When\r\n// _read(n) is called, it transforms the queued up data, calling the\r\n// buffered _write cb's as it consumes chunks.  If consuming a single\r\n// written chunk would result in multiple output chunks, then the first\r\n// outputted bit calls the readcb, and subsequent chunks just go into\r\n// the read buffer, and will cause it to emit 'readable' if necessary.\r\n//\r\n// This way, back-pressure is actually determined by the reading side,\r\n// since _read has to be called to start processing a new chunk.  However,\r\n// a pathological inflate type of transform can cause excessive buffering\r\n// here.  For example, imagine a stream where every byte of input is\r\n// interpreted as an integer from 0-255, and then results in that many\r\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\r\n// 1kb of data being output.  In this case, you could write a very small\r\n// amount of input, and end up with a very large amount of output.  In\r\n// such a pathological inflating mechanism, there'd be no way to tell\r\n// the system to stop doing the transform.  A single 4MB write could\r\n// cause the system to run out of memory.\r\n//\r\n// However, even in such a pathological case, only a single written chunk\r\n// would be consumed, and then the rest would wait (un-transformed) until\r\n// the results of the previous transformed chunk were consumed.\r\n\r\n'use strict';\r\n\r\nmodule.exports = Transform;\r\n\r\nvar Duplex = require('./_stream_duplex');\r\n\r\n/*<replacement>*/\r\nvar util = Object.create(require('core-util-is'));\r\nutil.inherits = require('inherits');\r\n/*</replacement>*/\r\n\r\nutil.inherits(Transform, Duplex);\r\n\r\nfunction afterTransform(er, data) {\r\n  var ts = this._transformState;\r\n  ts.transforming = false;\r\n\r\n  var cb = ts.writecb;\r\n\r\n  if (!cb) {\r\n    return this.emit('error', new Error('write callback called multiple times'));\r\n  }\r\n\r\n  ts.writechunk = null;\r\n  ts.writecb = null;\r\n\r\n  if (data != null) // single equals check for both `null` and `undefined`\r\n    this.push(data);\r\n\r\n  cb(er);\r\n\r\n  var rs = this._readableState;\r\n  rs.reading = false;\r\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\r\n    this._read(rs.highWaterMark);\r\n  }\r\n}\r\n\r\nfunction Transform(options) {\r\n  if (!(this instanceof Transform)) return new Transform(options);\r\n\r\n  Duplex.call(this, options);\r\n\r\n  this._transformState = {\r\n    afterTransform: afterTransform.bind(this),\r\n    needTransform: false,\r\n    transforming: false,\r\n    writecb: null,\r\n    writechunk: null,\r\n    writeencoding: null\r\n  };\r\n\r\n  // start out asking for a readable event once data is transformed.\r\n  this._readableState.needReadable = true;\r\n\r\n  // we have implemented the _read method, and done the other things\r\n  // that Readable wants before the first _read call, so unset the\r\n  // sync guard flag.\r\n  this._readableState.sync = false;\r\n\r\n  if (options) {\r\n    if (typeof options.transform === 'function') this._transform = options.transform;\r\n\r\n    if (typeof options.flush === 'function') this._flush = options.flush;\r\n  }\r\n\r\n  // When the writable side finishes, then flush out anything remaining.\r\n  this.on('prefinish', prefinish);\r\n}\r\n\r\nfunction prefinish() {\r\n  var _this = this;\r\n\r\n  if (typeof this._flush === 'function') {\r\n    this._flush(function (er, data) {\r\n      done(_this, er, data);\r\n    });\r\n  } else {\r\n    done(this, null, null);\r\n  }\r\n}\r\n\r\nTransform.prototype.push = function (chunk, encoding) {\r\n  this._transformState.needTransform = false;\r\n  return Duplex.prototype.push.call(this, chunk, encoding);\r\n};\r\n\r\n// This is the part where you do stuff!\r\n// override this function in implementation classes.\r\n// 'chunk' is an input chunk.\r\n//\r\n// Call `push(newChunk)` to pass along transformed output\r\n// to the readable side.  You may call 'push' zero or more times.\r\n//\r\n// Call `cb(err)` when you are done with this chunk.  If you pass\r\n// an error, then that'll put the hurt on the whole operation.  If you\r\n// never call cb(), then you'll never get another chunk.\r\nTransform.prototype._transform = function (chunk, encoding, cb) {\r\n  throw new Error('_transform() is not implemented');\r\n};\r\n\r\nTransform.prototype._write = function (chunk, encoding, cb) {\r\n  var ts = this._transformState;\r\n  ts.writecb = cb;\r\n  ts.writechunk = chunk;\r\n  ts.writeencoding = encoding;\r\n  if (!ts.transforming) {\r\n    var rs = this._readableState;\r\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\r\n  }\r\n};\r\n\r\n// Doesn't matter what the args are here.\r\n// _transform does all the work.\r\n// That we got here means that the readable side wants more data.\r\nTransform.prototype._read = function (n) {\r\n  var ts = this._transformState;\r\n\r\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\r\n    ts.transforming = true;\r\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\r\n  } else {\r\n    // mark that we need a transform, so that any data that comes in\r\n    // will get processed, now that we've asked for it.\r\n    ts.needTransform = true;\r\n  }\r\n};\r\n\r\nTransform.prototype._destroy = function (err, cb) {\r\n  var _this2 = this;\r\n\r\n  Duplex.prototype._destroy.call(this, err, function (err2) {\r\n    cb(err2);\r\n    _this2.emit('close');\r\n  });\r\n};\r\n\r\nfunction done(stream, er, data) {\r\n  if (er) return stream.emit('error', er);\r\n\r\n  if (data != null) // single equals check for both `null` and `undefined`\r\n    stream.push(data);\r\n\r\n  // if there's nothing in the write buffer, then that means\r\n  // that nothing more will ever be provided\r\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\r\n\r\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\r\n\r\n  return stream.push(null);\r\n}","map":{"mappings":[{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}}],"sources":{"..\\..\\node_modules\\readable-stream\\lib\\_stream_transform.js":"// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// a transform stream is a readable/writable stream where you do\r\n// something with the data.  Sometimes it's called a \"filter\",\r\n// but that's not a great name for it, since that implies a thing where\r\n// some bits pass through, and others are simply ignored.  (That would\r\n// be a valid example of a transform, of course.)\r\n//\r\n// While the output is causally related to the input, it's not a\r\n// necessarily symmetric or synchronous transformation.  For example,\r\n// a zlib stream might take multiple plain-text writes(), and then\r\n// emit a single compressed chunk some time in the future.\r\n//\r\n// Here's how this works:\r\n//\r\n// The Transform stream has all the aspects of the readable and writable\r\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\r\n// internally, and returns false if there's a lot of pending writes\r\n// buffered up.  When you call read(), that calls _read(n) until\r\n// there's enough pending readable data buffered up.\r\n//\r\n// In a transform stream, the written data is placed in a buffer.  When\r\n// _read(n) is called, it transforms the queued up data, calling the\r\n// buffered _write cb's as it consumes chunks.  If consuming a single\r\n// written chunk would result in multiple output chunks, then the first\r\n// outputted bit calls the readcb, and subsequent chunks just go into\r\n// the read buffer, and will cause it to emit 'readable' if necessary.\r\n//\r\n// This way, back-pressure is actually determined by the reading side,\r\n// since _read has to be called to start processing a new chunk.  However,\r\n// a pathological inflate type of transform can cause excessive buffering\r\n// here.  For example, imagine a stream where every byte of input is\r\n// interpreted as an integer from 0-255, and then results in that many\r\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\r\n// 1kb of data being output.  In this case, you could write a very small\r\n// amount of input, and end up with a very large amount of output.  In\r\n// such a pathological inflating mechanism, there'd be no way to tell\r\n// the system to stop doing the transform.  A single 4MB write could\r\n// cause the system to run out of memory.\r\n//\r\n// However, even in such a pathological case, only a single written chunk\r\n// would be consumed, and then the rest would wait (un-transformed) until\r\n// the results of the previous transformed chunk were consumed.\r\n\r\n'use strict';\r\n\r\nmodule.exports = Transform;\r\n\r\nvar Duplex = require('./_stream_duplex');\r\n\r\n/*<replacement>*/\r\nvar util = Object.create(require('core-util-is'));\r\nutil.inherits = require('inherits');\r\n/*</replacement>*/\r\n\r\nutil.inherits(Transform, Duplex);\r\n\r\nfunction afterTransform(er, data) {\r\n  var ts = this._transformState;\r\n  ts.transforming = false;\r\n\r\n  var cb = ts.writecb;\r\n\r\n  if (!cb) {\r\n    return this.emit('error', new Error('write callback called multiple times'));\r\n  }\r\n\r\n  ts.writechunk = null;\r\n  ts.writecb = null;\r\n\r\n  if (data != null) // single equals check for both `null` and `undefined`\r\n    this.push(data);\r\n\r\n  cb(er);\r\n\r\n  var rs = this._readableState;\r\n  rs.reading = false;\r\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\r\n    this._read(rs.highWaterMark);\r\n  }\r\n}\r\n\r\nfunction Transform(options) {\r\n  if (!(this instanceof Transform)) return new Transform(options);\r\n\r\n  Duplex.call(this, options);\r\n\r\n  this._transformState = {\r\n    afterTransform: afterTransform.bind(this),\r\n    needTransform: false,\r\n    transforming: false,\r\n    writecb: null,\r\n    writechunk: null,\r\n    writeencoding: null\r\n  };\r\n\r\n  // start out asking for a readable event once data is transformed.\r\n  this._readableState.needReadable = true;\r\n\r\n  // we have implemented the _read method, and done the other things\r\n  // that Readable wants before the first _read call, so unset the\r\n  // sync guard flag.\r\n  this._readableState.sync = false;\r\n\r\n  if (options) {\r\n    if (typeof options.transform === 'function') this._transform = options.transform;\r\n\r\n    if (typeof options.flush === 'function') this._flush = options.flush;\r\n  }\r\n\r\n  // When the writable side finishes, then flush out anything remaining.\r\n  this.on('prefinish', prefinish);\r\n}\r\n\r\nfunction prefinish() {\r\n  var _this = this;\r\n\r\n  if (typeof this._flush === 'function') {\r\n    this._flush(function (er, data) {\r\n      done(_this, er, data);\r\n    });\r\n  } else {\r\n    done(this, null, null);\r\n  }\r\n}\r\n\r\nTransform.prototype.push = function (chunk, encoding) {\r\n  this._transformState.needTransform = false;\r\n  return Duplex.prototype.push.call(this, chunk, encoding);\r\n};\r\n\r\n// This is the part where you do stuff!\r\n// override this function in implementation classes.\r\n// 'chunk' is an input chunk.\r\n//\r\n// Call `push(newChunk)` to pass along transformed output\r\n// to the readable side.  You may call 'push' zero or more times.\r\n//\r\n// Call `cb(err)` when you are done with this chunk.  If you pass\r\n// an error, then that'll put the hurt on the whole operation.  If you\r\n// never call cb(), then you'll never get another chunk.\r\nTransform.prototype._transform = function (chunk, encoding, cb) {\r\n  throw new Error('_transform() is not implemented');\r\n};\r\n\r\nTransform.prototype._write = function (chunk, encoding, cb) {\r\n  var ts = this._transformState;\r\n  ts.writecb = cb;\r\n  ts.writechunk = chunk;\r\n  ts.writeencoding = encoding;\r\n  if (!ts.transforming) {\r\n    var rs = this._readableState;\r\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\r\n  }\r\n};\r\n\r\n// Doesn't matter what the args are here.\r\n// _transform does all the work.\r\n// That we got here means that the readable side wants more data.\r\nTransform.prototype._read = function (n) {\r\n  var ts = this._transformState;\r\n\r\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\r\n    ts.transforming = true;\r\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\r\n  } else {\r\n    // mark that we need a transform, so that any data that comes in\r\n    // will get processed, now that we've asked for it.\r\n    ts.needTransform = true;\r\n  }\r\n};\r\n\r\nTransform.prototype._destroy = function (err, cb) {\r\n  var _this2 = this;\r\n\r\n  Duplex.prototype._destroy.call(this, err, function (err2) {\r\n    cb(err2);\r\n    _this2.emit('close');\r\n  });\r\n};\r\n\r\nfunction done(stream, er, data) {\r\n  if (er) return stream.emit('error', er);\r\n\r\n  if (data != null) // single equals check for both `null` and `undefined`\r\n    stream.push(data);\r\n\r\n  // if there's nothing in the write buffer, then that means\r\n  // that nothing more will ever be provided\r\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\r\n\r\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\r\n\r\n  return stream.push(null);\r\n}"},"lineCount":214}},"hash":"c76479016603aa4bfe019d60c95db923","cacheData":{"env":{}}}