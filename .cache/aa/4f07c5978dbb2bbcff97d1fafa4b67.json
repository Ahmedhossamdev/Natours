{"id":"../../node_modules/hash.js/lib/hash/sha/1.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\package.json","includedInParent":true,"mtime":1684371848082},{"name":"../utils","loc":{"line":3,"column":20,"index":37},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\lib\\hash\\sha\\1.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\lib\\hash\\utils.js"},{"name":"../common","loc":{"line":4,"column":21,"index":72},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\lib\\hash\\sha\\1.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\lib\\hash\\common.js"},{"name":"./common","loc":{"line":5,"column":24,"index":111},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\lib\\hash\\sha\\1.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\hash.js\\lib\\hash\\sha\\common.js"}],"generated":{"js":"'use strict';\r\n\r\nvar utils = require('../utils');\r\nvar common = require('../common');\r\nvar shaCommon = require('./common');\r\n\r\nvar rotl32 = utils.rotl32;\r\nvar sum32 = utils.sum32;\r\nvar sum32_5 = utils.sum32_5;\r\nvar ft_1 = shaCommon.ft_1;\r\nvar BlockHash = common.BlockHash;\r\n\r\nvar sha1_K = [\r\n  0x5A827999, 0x6ED9EBA1,\r\n  0x8F1BBCDC, 0xCA62C1D6\r\n];\r\n\r\nfunction SHA1() {\r\n  if (!(this instanceof SHA1))\r\n    return new SHA1();\r\n\r\n  BlockHash.call(this);\r\n  this.h = [\r\n    0x67452301, 0xefcdab89, 0x98badcfe,\r\n    0x10325476, 0xc3d2e1f0 ];\r\n  this.W = new Array(80);\r\n}\r\n\r\nutils.inherits(SHA1, BlockHash);\r\nmodule.exports = SHA1;\r\n\r\nSHA1.blockSize = 512;\r\nSHA1.outSize = 160;\r\nSHA1.hmacStrength = 80;\r\nSHA1.padLength = 64;\r\n\r\nSHA1.prototype._update = function _update(msg, start) {\r\n  var W = this.W;\r\n\r\n  for (var i = 0; i < 16; i++)\r\n    W[i] = msg[start + i];\r\n\r\n  for(; i < W.length; i++)\r\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\r\n\r\n  var a = this.h[0];\r\n  var b = this.h[1];\r\n  var c = this.h[2];\r\n  var d = this.h[3];\r\n  var e = this.h[4];\r\n\r\n  for (i = 0; i < W.length; i++) {\r\n    var s = ~~(i / 20);\r\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\r\n    e = d;\r\n    d = c;\r\n    c = rotl32(b, 30);\r\n    b = a;\r\n    a = t;\r\n  }\r\n\r\n  this.h[0] = sum32(this.h[0], a);\r\n  this.h[1] = sum32(this.h[1], b);\r\n  this.h[2] = sum32(this.h[2], c);\r\n  this.h[3] = sum32(this.h[3], d);\r\n  this.h[4] = sum32(this.h[4], e);\r\n};\r\n\r\nSHA1.prototype._digest = function digest(enc) {\r\n  if (enc === 'hex')\r\n    return utils.toHex32(this.h, 'big');\r\n  else\r\n    return utils.split32(this.h, 'big');\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/hash.js/lib/hash/sha/1.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}}],"sources":{"../../node_modules/hash.js/lib/hash/sha/1.js":"'use strict';\r\n\r\nvar utils = require('../utils');\r\nvar common = require('../common');\r\nvar shaCommon = require('./common');\r\n\r\nvar rotl32 = utils.rotl32;\r\nvar sum32 = utils.sum32;\r\nvar sum32_5 = utils.sum32_5;\r\nvar ft_1 = shaCommon.ft_1;\r\nvar BlockHash = common.BlockHash;\r\n\r\nvar sha1_K = [\r\n  0x5A827999, 0x6ED9EBA1,\r\n  0x8F1BBCDC, 0xCA62C1D6\r\n];\r\n\r\nfunction SHA1() {\r\n  if (!(this instanceof SHA1))\r\n    return new SHA1();\r\n\r\n  BlockHash.call(this);\r\n  this.h = [\r\n    0x67452301, 0xefcdab89, 0x98badcfe,\r\n    0x10325476, 0xc3d2e1f0 ];\r\n  this.W = new Array(80);\r\n}\r\n\r\nutils.inherits(SHA1, BlockHash);\r\nmodule.exports = SHA1;\r\n\r\nSHA1.blockSize = 512;\r\nSHA1.outSize = 160;\r\nSHA1.hmacStrength = 80;\r\nSHA1.padLength = 64;\r\n\r\nSHA1.prototype._update = function _update(msg, start) {\r\n  var W = this.W;\r\n\r\n  for (var i = 0; i < 16; i++)\r\n    W[i] = msg[start + i];\r\n\r\n  for(; i < W.length; i++)\r\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\r\n\r\n  var a = this.h[0];\r\n  var b = this.h[1];\r\n  var c = this.h[2];\r\n  var d = this.h[3];\r\n  var e = this.h[4];\r\n\r\n  for (i = 0; i < W.length; i++) {\r\n    var s = ~~(i / 20);\r\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\r\n    e = d;\r\n    d = c;\r\n    c = rotl32(b, 30);\r\n    b = a;\r\n    a = t;\r\n  }\r\n\r\n  this.h[0] = sum32(this.h[0], a);\r\n  this.h[1] = sum32(this.h[1], b);\r\n  this.h[2] = sum32(this.h[2], c);\r\n  this.h[3] = sum32(this.h[3], d);\r\n  this.h[4] = sum32(this.h[4], e);\r\n};\r\n\r\nSHA1.prototype._digest = function digest(enc) {\r\n  if (enc === 'hex')\r\n    return utils.toHex32(this.h, 'big');\r\n  else\r\n    return utils.split32(this.h, 'big');\r\n};\r\n"},"lineCount":75}},"error":null,"hash":"fec7e1ac451dd3d0115851b1f2f97538","cacheData":{"env":{}}}