{"dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1685934625119},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1684371840936},{"name":"./_fails","loc":{"line":3,"column":20}}],"generated":{"js":"'use strict';\r\n// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\r\nvar fails = require('./_fails');\r\nvar getTime = Date.prototype.getTime;\r\nvar $toISOString = Date.prototype.toISOString;\r\n\r\nvar lz = function (num) {\r\n  return num > 9 ? num : '0' + num;\r\n};\r\n\r\n// PhantomJS / old WebKit has a broken implementations\r\nmodule.exports = (fails(function () {\r\n  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';\r\n}) || !fails(function () {\r\n  $toISOString.call(new Date(NaN));\r\n})) ? function toISOString() {\r\n  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');\r\n  var d = this;\r\n  var y = d.getUTCFullYear();\r\n  var m = d.getUTCMilliseconds();\r\n  var s = y < 0 ? '-' : y > 9999 ? '+' : '';\r\n  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +\r\n    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +\r\n    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +\r\n    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';\r\n} : $toISOString;\r\n","map":{"mappings":[{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}}],"sources":{"..\\..\\node_modules\\core-js\\modules\\_date-to-iso-string.js":"'use strict';\r\n// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\r\nvar fails = require('./_fails');\r\nvar getTime = Date.prototype.getTime;\r\nvar $toISOString = Date.prototype.toISOString;\r\n\r\nvar lz = function (num) {\r\n  return num > 9 ? num : '0' + num;\r\n};\r\n\r\n// PhantomJS / old WebKit has a broken implementations\r\nmodule.exports = (fails(function () {\r\n  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';\r\n}) || !fails(function () {\r\n  $toISOString.call(new Date(NaN));\r\n})) ? function toISOString() {\r\n  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');\r\n  var d = this;\r\n  var y = d.getUTCFullYear();\r\n  var m = d.getUTCMilliseconds();\r\n  var s = y < 0 ? '-' : y > 9999 ? '+' : '';\r\n  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +\r\n    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +\r\n    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +\r\n    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';\r\n} : $toISOString;\r\n"},"lineCount":27}},"hash":"39aaefc44d03e3f6aa018fa165a7d6d0","cacheData":{"env":{}}}