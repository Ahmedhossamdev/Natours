{"id":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\asn1.js\\package.json","includedInParent":true,"mtime":1684371837720},{"name":"inherits","loc":{"line":3,"column":25,"index":42},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\asn1.js\\lib\\asn1\\decoders\\pem.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\inherits\\inherits_browser.js"},{"name":"safer-buffer","loc":{"line":4,"column":23,"index":79},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\asn1.js\\lib\\asn1\\decoders\\pem.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\safer-buffer\\safer.js"},{"name":"./der","loc":{"line":6,"column":27,"index":133},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\asn1.js\\lib\\asn1\\decoders\\pem.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\asn1.js\\lib\\asn1\\decoders\\der.js"}],"generated":{"js":"\n'use strict';\r\n\r\nconst inherits = require('inherits');\r\nconst Buffer = require('safer-buffer').Buffer;\r\n\r\nconst DERDecoder = require('./der');\r\n\r\nfunction PEMDecoder(entity) {\r\n  DERDecoder.call(this, entity);\r\n  this.enc = 'pem';\r\n}\r\ninherits(PEMDecoder, DERDecoder);\r\nmodule.exports = PEMDecoder;\r\n\r\nPEMDecoder.prototype.decode = function decode(data, options) {\r\n  const lines = data.toString().split(/[\\r\\n]+/g);\r\n\r\n  const label = options.label.toUpperCase();\r\n\r\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\r\n  let start = -1;\r\n  let end = -1;\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const match = lines[i].match(re);\r\n    if (match === null)\r\n      continue;\r\n\r\n    if (match[2] !== label)\r\n      continue;\r\n\r\n    if (start === -1) {\r\n      if (match[1] !== 'BEGIN')\r\n        break;\r\n      start = i;\r\n    } else {\r\n      if (match[1] !== 'END')\r\n        break;\r\n      end = i;\r\n      break;\r\n    }\r\n  }\r\n  if (start === -1 || end === -1)\r\n    throw new Error('PEM section not found for: ' + label);\r\n\r\n  const base64 = lines.slice(start + 1, end).join('');\r\n  // Remove excessive symbols\r\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\r\n\r\n  const input = Buffer.from(base64, 'base64');\r\n  return DERDecoder.prototype.decode.call(this, input, options);\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}}],"sources":{"../../node_modules/asn1.js/lib/asn1/decoders/pem.js":"'use strict';\r\n\r\nconst inherits = require('inherits');\r\nconst Buffer = require('safer-buffer').Buffer;\r\n\r\nconst DERDecoder = require('./der');\r\n\r\nfunction PEMDecoder(entity) {\r\n  DERDecoder.call(this, entity);\r\n  this.enc = 'pem';\r\n}\r\ninherits(PEMDecoder, DERDecoder);\r\nmodule.exports = PEMDecoder;\r\n\r\nPEMDecoder.prototype.decode = function decode(data, options) {\r\n  const lines = data.toString().split(/[\\r\\n]+/g);\r\n\r\n  const label = options.label.toUpperCase();\r\n\r\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\r\n  let start = -1;\r\n  let end = -1;\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const match = lines[i].match(re);\r\n    if (match === null)\r\n      continue;\r\n\r\n    if (match[2] !== label)\r\n      continue;\r\n\r\n    if (start === -1) {\r\n      if (match[1] !== 'BEGIN')\r\n        break;\r\n      start = i;\r\n    } else {\r\n      if (match[1] !== 'END')\r\n        break;\r\n      end = i;\r\n      break;\r\n    }\r\n  }\r\n  if (start === -1 || end === -1)\r\n    throw new Error('PEM section not found for: ' + label);\r\n\r\n  const base64 = lines.slice(start + 1, end).join('');\r\n  // Remove excessive symbols\r\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\r\n\r\n  const input = Buffer.from(base64, 'base64');\r\n  return DERDecoder.prototype.decode.call(this, input, options);\r\n};\r\n"},"lineCount":53}},"error":null,"hash":"7eb366544360b548560a66819048d8cd","cacheData":{"env":{}}}