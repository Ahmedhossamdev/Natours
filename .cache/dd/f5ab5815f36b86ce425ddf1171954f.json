{"id":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\stripe\\cjs\\package.json","includedInParent":true,"mtime":1686031678189},{"name":"http","loc":{"line":4,"column":21,"index":164},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\stripe\\cjs\\net\\NodeHttpClient.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\stream-http\\index.js"},{"name":"https","loc":{"line":5,"column":22,"index":195},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\stripe\\cjs\\net\\NodeHttpClient.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\https-browserify\\index.js"},{"name":"./HttpClient.js","loc":{"line":6,"column":32,"index":237},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\stripe\\cjs\\net\\NodeHttpClient.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\stripe\\cjs\\net\\HttpClient.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttpClientResponse = exports.NodeHttpClient = void 0;\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst HttpClient_js_1 = require(\"./HttpClient.js\");\nconst defaultHttpAgent = new http.Agent({ keepAlive: true });\nconst defaultHttpsAgent = new https.Agent({ keepAlive: true });\n/**\n * HTTP client which uses the Node `http` and `https` packages to issue\n * requests.`\n */\nclass NodeHttpClient extends HttpClient_js_1.HttpClient {\n    constructor(agent) {\n        super();\n        this._agent = agent;\n    }\n    /** @override. */\n    getClientName() {\n        return 'node';\n    }\n    makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        const isInsecureConnection = protocol === 'http';\n        let agent = this._agent;\n        if (!agent) {\n            agent = isInsecureConnection ? defaultHttpAgent : defaultHttpsAgent;\n        }\n        const requestPromise = new Promise((resolve, reject) => {\n            const req = (isInsecureConnection ? http : https).request({\n                host: host,\n                port: port,\n                path,\n                method,\n                agent,\n                headers,\n                ciphers: 'DEFAULT:!aNULL:!eNULL:!LOW:!EXPORT:!SSLv2:!MD5',\n            });\n            req.setTimeout(timeout, () => {\n                req.destroy(HttpClient_js_1.HttpClient.makeTimeoutError());\n            });\n            req.on('response', (res) => {\n                resolve(new NodeHttpClientResponse(res));\n            });\n            req.on('error', (error) => {\n                reject(error);\n            });\n            req.once('socket', (socket) => {\n                if (socket.connecting) {\n                    socket.once(isInsecureConnection ? 'connect' : 'secureConnect', () => {\n                        // Send payload; we're safe:\n                        req.write(requestData);\n                        req.end();\n                    });\n                }\n                else {\n                    // we're already connected\n                    req.write(requestData);\n                    req.end();\n                }\n            });\n        });\n        return requestPromise;\n    }\n}\nexports.NodeHttpClient = NodeHttpClient;\nclass NodeHttpClientResponse extends HttpClient_js_1.HttpClientResponse {\n    constructor(res) {\n        // @ts-ignore\n        super(res.statusCode, res.headers || {});\n        this._res = res;\n    }\n    getRawResponse() {\n        return this._res;\n    }\n    toStream(streamCompleteCallback) {\n        // The raw response is itself the stream, so we just return that. To be\n        // backwards compatible, we should invoke the streamCompleteCallback only\n        // once the stream has been fully consumed.\n        this._res.once('end', () => streamCompleteCallback());\n        return this._res;\n    }\n    toJSON() {\n        return new Promise((resolve, reject) => {\n            let response = '';\n            this._res.setEncoding('utf8');\n            this._res.on('data', (chunk) => {\n                response += chunk;\n            });\n            this._res.once('end', () => {\n                try {\n                    resolve(JSON.parse(response));\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n}\nexports.NodeHttpClientResponse = NodeHttpClientResponse;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/stripe/cjs/net/NodeHttpClient.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}}],"sources":{"../../node_modules/stripe/cjs/net/NodeHttpClient.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttpClientResponse = exports.NodeHttpClient = void 0;\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst HttpClient_js_1 = require(\"./HttpClient.js\");\nconst defaultHttpAgent = new http.Agent({ keepAlive: true });\nconst defaultHttpsAgent = new https.Agent({ keepAlive: true });\n/**\n * HTTP client which uses the Node `http` and `https` packages to issue\n * requests.`\n */\nclass NodeHttpClient extends HttpClient_js_1.HttpClient {\n    constructor(agent) {\n        super();\n        this._agent = agent;\n    }\n    /** @override. */\n    getClientName() {\n        return 'node';\n    }\n    makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        const isInsecureConnection = protocol === 'http';\n        let agent = this._agent;\n        if (!agent) {\n            agent = isInsecureConnection ? defaultHttpAgent : defaultHttpsAgent;\n        }\n        const requestPromise = new Promise((resolve, reject) => {\n            const req = (isInsecureConnection ? http : https).request({\n                host: host,\n                port: port,\n                path,\n                method,\n                agent,\n                headers,\n                ciphers: 'DEFAULT:!aNULL:!eNULL:!LOW:!EXPORT:!SSLv2:!MD5',\n            });\n            req.setTimeout(timeout, () => {\n                req.destroy(HttpClient_js_1.HttpClient.makeTimeoutError());\n            });\n            req.on('response', (res) => {\n                resolve(new NodeHttpClientResponse(res));\n            });\n            req.on('error', (error) => {\n                reject(error);\n            });\n            req.once('socket', (socket) => {\n                if (socket.connecting) {\n                    socket.once(isInsecureConnection ? 'connect' : 'secureConnect', () => {\n                        // Send payload; we're safe:\n                        req.write(requestData);\n                        req.end();\n                    });\n                }\n                else {\n                    // we're already connected\n                    req.write(requestData);\n                    req.end();\n                }\n            });\n        });\n        return requestPromise;\n    }\n}\nexports.NodeHttpClient = NodeHttpClient;\nclass NodeHttpClientResponse extends HttpClient_js_1.HttpClientResponse {\n    constructor(res) {\n        // @ts-ignore\n        super(res.statusCode, res.headers || {});\n        this._res = res;\n    }\n    getRawResponse() {\n        return this._res;\n    }\n    toStream(streamCompleteCallback) {\n        // The raw response is itself the stream, so we just return that. To be\n        // backwards compatible, we should invoke the streamCompleteCallback only\n        // once the stream has been fully consumed.\n        this._res.once('end', () => streamCompleteCallback());\n        return this._res;\n    }\n    toJSON() {\n        return new Promise((resolve, reject) => {\n            let response = '';\n            this._res.setEncoding('utf8');\n            this._res.on('data', (chunk) => {\n                response += chunk;\n            });\n            this._res.once('end', () => {\n                try {\n                    resolve(JSON.parse(response));\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n}\nexports.NodeHttpClientResponse = NodeHttpClientResponse;\n"},"lineCount":101}},"error":null,"hash":"628d2ba018f1e1c55226f0e6c9e0953c","cacheData":{"env":{}}}