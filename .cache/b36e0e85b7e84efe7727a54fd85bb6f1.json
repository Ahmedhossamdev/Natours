{"dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1685934625119},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\proxy-from-env\\package.json","includedInParent":true,"mtime":1685129582790},{"name":"url","loc":{"line":3,"column":23}},{"name":"process"}],"generated":{"js":"var process = require(\"process\");\n'use strict';\n\nvar parseUrl = require('url').parse;\n\nvar DEFAULT_PORTS = {\n  ftp: 21,\n  gopher: 70,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443,\n};\n\nvar stringEndsWith = String.prototype.endsWith || function(s) {\n  return s.length <= this.length &&\n    this.indexOf(s, this.length - s.length) !== -1;\n};\n\n/**\n * @param {string|object} url - The URL, or the result from url.parse.\n * @return {string} The URL of the proxy that should handle the request to the\n *  given URL. If no proxy is set, this will be an empty string.\n */\nfunction getProxyForUrl(url) {\n  var parsedUrl = typeof url === 'string' ? parseUrl(url) : url || {};\n  var proto = parsedUrl.protocol;\n  var hostname = parsedUrl.host;\n  var port = parsedUrl.port;\n  if (typeof hostname !== 'string' || !hostname || typeof proto !== 'string') {\n    return '';  // Don't proxy URLs without a valid scheme or host.\n  }\n\n  proto = proto.split(':', 1)[0];\n  // Stripping ports in this way instead of using parsedUrl.hostname to make\n  // sure that the brackets around IPv6 addresses are kept.\n  hostname = hostname.replace(/:\\d*$/, '');\n  port = parseInt(port) || DEFAULT_PORTS[proto] || 0;\n  if (!shouldProxy(hostname, port)) {\n    return '';  // Don't proxy URLs that match NO_PROXY.\n  }\n\n  var proxy =\n    getEnv('npm_config_' + proto + '_proxy') ||\n    getEnv(proto + '_proxy') ||\n    getEnv('npm_config_proxy') ||\n    getEnv('all_proxy');\n  if (proxy && proxy.indexOf('://') === -1) {\n    // Missing scheme in proxy, default to the requested URL's scheme.\n    proxy = proto + '://' + proxy;\n  }\n  return proxy;\n}\n\n/**\n * Determines whether a given URL should be proxied.\n *\n * @param {string} hostname - The host name of the URL.\n * @param {number} port - The effective port of the URL.\n * @returns {boolean} Whether the given URL should be proxied.\n * @private\n */\nfunction shouldProxy(hostname, port) {\n  var NO_PROXY =\n    (getEnv('npm_config_no_proxy') || getEnv('no_proxy')).toLowerCase();\n  if (!NO_PROXY) {\n    return true;  // Always proxy if NO_PROXY is not set.\n  }\n  if (NO_PROXY === '*') {\n    return false;  // Never proxy if wildcard is set.\n  }\n\n  return NO_PROXY.split(/[,\\s]/).every(function(proxy) {\n    if (!proxy) {\n      return true;  // Skip zero-length hosts.\n    }\n    var parsedProxy = proxy.match(/^(.+):(\\d+)$/);\n    var parsedProxyHostname = parsedProxy ? parsedProxy[1] : proxy;\n    var parsedProxyPort = parsedProxy ? parseInt(parsedProxy[2]) : 0;\n    if (parsedProxyPort && parsedProxyPort !== port) {\n      return true;  // Skip if ports don't match.\n    }\n\n    if (!/^[.*]/.test(parsedProxyHostname)) {\n      // No wildcards, so stop proxying if there is an exact match.\n      return hostname !== parsedProxyHostname;\n    }\n\n    if (parsedProxyHostname.charAt(0) === '*') {\n      // Remove leading wildcard.\n      parsedProxyHostname = parsedProxyHostname.slice(1);\n    }\n    // Stop proxying if the hostname ends with the no_proxy host.\n    return !stringEndsWith.call(hostname, parsedProxyHostname);\n  });\n}\n\n/**\n * Get the value for an environment variable.\n *\n * @param {string} key - The name of the environment variable.\n * @return {string} The value of the environment variable.\n * @private\n */\nfunction getEnv(key) {\n  return process.env[key.toLowerCase()] || process.env[key.toUpperCase()] || '';\n}\n\nexports.getProxyForUrl = getProxyForUrl;\n","map":{"mappings":[{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"..\\..\\node_modules\\proxy-from-env\\index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}}],"sources":{"..\\..\\node_modules\\proxy-from-env\\index.js":"'use strict';\n\nvar parseUrl = require('url').parse;\n\nvar DEFAULT_PORTS = {\n  ftp: 21,\n  gopher: 70,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443,\n};\n\nvar stringEndsWith = String.prototype.endsWith || function(s) {\n  return s.length <= this.length &&\n    this.indexOf(s, this.length - s.length) !== -1;\n};\n\n/**\n * @param {string|object} url - The URL, or the result from url.parse.\n * @return {string} The URL of the proxy that should handle the request to the\n *  given URL. If no proxy is set, this will be an empty string.\n */\nfunction getProxyForUrl(url) {\n  var parsedUrl = typeof url === 'string' ? parseUrl(url) : url || {};\n  var proto = parsedUrl.protocol;\n  var hostname = parsedUrl.host;\n  var port = parsedUrl.port;\n  if (typeof hostname !== 'string' || !hostname || typeof proto !== 'string') {\n    return '';  // Don't proxy URLs without a valid scheme or host.\n  }\n\n  proto = proto.split(':', 1)[0];\n  // Stripping ports in this way instead of using parsedUrl.hostname to make\n  // sure that the brackets around IPv6 addresses are kept.\n  hostname = hostname.replace(/:\\d*$/, '');\n  port = parseInt(port) || DEFAULT_PORTS[proto] || 0;\n  if (!shouldProxy(hostname, port)) {\n    return '';  // Don't proxy URLs that match NO_PROXY.\n  }\n\n  var proxy =\n    getEnv('npm_config_' + proto + '_proxy') ||\n    getEnv(proto + '_proxy') ||\n    getEnv('npm_config_proxy') ||\n    getEnv('all_proxy');\n  if (proxy && proxy.indexOf('://') === -1) {\n    // Missing scheme in proxy, default to the requested URL's scheme.\n    proxy = proto + '://' + proxy;\n  }\n  return proxy;\n}\n\n/**\n * Determines whether a given URL should be proxied.\n *\n * @param {string} hostname - The host name of the URL.\n * @param {number} port - The effective port of the URL.\n * @returns {boolean} Whether the given URL should be proxied.\n * @private\n */\nfunction shouldProxy(hostname, port) {\n  var NO_PROXY =\n    (getEnv('npm_config_no_proxy') || getEnv('no_proxy')).toLowerCase();\n  if (!NO_PROXY) {\n    return true;  // Always proxy if NO_PROXY is not set.\n  }\n  if (NO_PROXY === '*') {\n    return false;  // Never proxy if wildcard is set.\n  }\n\n  return NO_PROXY.split(/[,\\s]/).every(function(proxy) {\n    if (!proxy) {\n      return true;  // Skip zero-length hosts.\n    }\n    var parsedProxy = proxy.match(/^(.+):(\\d+)$/);\n    var parsedProxyHostname = parsedProxy ? parsedProxy[1] : proxy;\n    var parsedProxyPort = parsedProxy ? parseInt(parsedProxy[2]) : 0;\n    if (parsedProxyPort && parsedProxyPort !== port) {\n      return true;  // Skip if ports don't match.\n    }\n\n    if (!/^[.*]/.test(parsedProxyHostname)) {\n      // No wildcards, so stop proxying if there is an exact match.\n      return hostname !== parsedProxyHostname;\n    }\n\n    if (parsedProxyHostname.charAt(0) === '*') {\n      // Remove leading wildcard.\n      parsedProxyHostname = parsedProxyHostname.slice(1);\n    }\n    // Stop proxying if the hostname ends with the no_proxy host.\n    return !stringEndsWith.call(hostname, parsedProxyHostname);\n  });\n}\n\n/**\n * Get the value for an environment variable.\n *\n * @param {string} key - The name of the environment variable.\n * @return {string} The value of the environment variable.\n * @private\n */\nfunction getEnv(key) {\n  return process.env[key.toLowerCase()] || process.env[key.toUpperCase()] || '';\n}\n\nexports.getProxyForUrl = getProxyForUrl;\n"},"lineCount":110}},"hash":"6fa8eef2749324fa9da2bb40fb2ffdd8","cacheData":{"env":{}}}