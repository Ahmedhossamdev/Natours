{"id":"../../node_modules/core-js/modules/es6.regexp.replace.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1685834933886},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1684371840936},{"name":"./_an-object","loc":{"line":3,"column":23,"index":40},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.regexp.replace.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_an-object.js"},{"name":"./_to-object","loc":{"line":4,"column":23,"index":81},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.regexp.replace.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_to-object.js"},{"name":"./_to-length","loc":{"line":5,"column":23,"index":122},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.regexp.replace.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_to-length.js"},{"name":"./_to-integer","loc":{"line":6,"column":24,"index":164},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.regexp.replace.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_to-integer.js"},{"name":"./_advance-string-index","loc":{"line":7,"column":33,"index":216},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.regexp.replace.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_advance-string-index.js"},{"name":"./_regexp-exec-abstract","loc":{"line":8,"column":25,"index":270},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.regexp.replace.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_regexp-exec-abstract.js"},{"name":"./_fix-re-wks","loc":{"line":20,"column":8,"index":600},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.regexp.replace.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_fix-re-wks.js"}],"generated":{"js":"var global = arguments[3];\n'use strict';\r\n\r\nvar anObject = require('./_an-object');\r\nvar toObject = require('./_to-object');\r\nvar toLength = require('./_to-length');\r\nvar toInteger = require('./_to-integer');\r\nvar advanceStringIndex = require('./_advance-string-index');\r\nvar regExpExec = require('./_regexp-exec-abstract');\r\nvar max = Math.max;\r\nvar min = Math.min;\r\nvar floor = Math.floor;\r\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\r\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\r\n\r\nvar maybeToString = function (it) {\r\n  return it === undefined ? it : String(it);\r\n};\r\n\r\n// @@replace logic\r\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\r\n  return [\r\n    // `String.prototype.replace` method\r\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\r\n    function replace(searchValue, replaceValue) {\r\n      var O = defined(this);\r\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\r\n      return fn !== undefined\r\n        ? fn.call(searchValue, O, replaceValue)\r\n        : $replace.call(String(O), searchValue, replaceValue);\r\n    },\r\n    // `RegExp.prototype[@@replace]` method\r\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\r\n    function (regexp, replaceValue) {\r\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\r\n      if (res.done) return res.value;\r\n\r\n      var rx = anObject(regexp);\r\n      var S = String(this);\r\n      var functionalReplace = typeof replaceValue === 'function';\r\n      if (!functionalReplace) replaceValue = String(replaceValue);\r\n      var global = rx.global;\r\n      if (global) {\r\n        var fullUnicode = rx.unicode;\r\n        rx.lastIndex = 0;\r\n      }\r\n      var results = [];\r\n      while (true) {\r\n        var result = regExpExec(rx, S);\r\n        if (result === null) break;\r\n        results.push(result);\r\n        if (!global) break;\r\n        var matchStr = String(result[0]);\r\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\r\n      }\r\n      var accumulatedResult = '';\r\n      var nextSourcePosition = 0;\r\n      for (var i = 0; i < results.length; i++) {\r\n        result = results[i];\r\n        var matched = String(result[0]);\r\n        var position = max(min(toInteger(result.index), S.length), 0);\r\n        var captures = [];\r\n        // NOTE: This is equivalent to\r\n        //   captures = result.slice(1).map(maybeToString)\r\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\r\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\r\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\r\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\r\n        var namedCaptures = result.groups;\r\n        if (functionalReplace) {\r\n          var replacerArgs = [matched].concat(captures, position, S);\r\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\r\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\r\n        } else {\r\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\r\n        }\r\n        if (position >= nextSourcePosition) {\r\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\r\n          nextSourcePosition = position + matched.length;\r\n        }\r\n      }\r\n      return accumulatedResult + S.slice(nextSourcePosition);\r\n    }\r\n  ];\r\n\r\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\r\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\r\n    var tailPos = position + matched.length;\r\n    var m = captures.length;\r\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\r\n    if (namedCaptures !== undefined) {\r\n      namedCaptures = toObject(namedCaptures);\r\n      symbols = SUBSTITUTION_SYMBOLS;\r\n    }\r\n    return $replace.call(replacement, symbols, function (match, ch) {\r\n      var capture;\r\n      switch (ch.charAt(0)) {\r\n        case '$': return '$';\r\n        case '&': return matched;\r\n        case '`': return str.slice(0, position);\r\n        case \"'\": return str.slice(tailPos);\r\n        case '<':\r\n          capture = namedCaptures[ch.slice(1, -1)];\r\n          break;\r\n        default: // \\d\\d?\r\n          var n = +ch;\r\n          if (n === 0) return match;\r\n          if (n > m) {\r\n            var f = floor(n / 10);\r\n            if (f === 0) return match;\r\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\r\n            return match;\r\n          }\r\n          capture = captures[n - 1];\r\n      }\r\n      return capture === undefined ? '' : capture;\r\n    });\r\n  }\r\n});\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.replace.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}}],"sources":{"../../node_modules/core-js/modules/es6.regexp.replace.js":"'use strict';\r\n\r\nvar anObject = require('./_an-object');\r\nvar toObject = require('./_to-object');\r\nvar toLength = require('./_to-length');\r\nvar toInteger = require('./_to-integer');\r\nvar advanceStringIndex = require('./_advance-string-index');\r\nvar regExpExec = require('./_regexp-exec-abstract');\r\nvar max = Math.max;\r\nvar min = Math.min;\r\nvar floor = Math.floor;\r\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\r\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\r\n\r\nvar maybeToString = function (it) {\r\n  return it === undefined ? it : String(it);\r\n};\r\n\r\n// @@replace logic\r\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\r\n  return [\r\n    // `String.prototype.replace` method\r\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\r\n    function replace(searchValue, replaceValue) {\r\n      var O = defined(this);\r\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\r\n      return fn !== undefined\r\n        ? fn.call(searchValue, O, replaceValue)\r\n        : $replace.call(String(O), searchValue, replaceValue);\r\n    },\r\n    // `RegExp.prototype[@@replace]` method\r\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\r\n    function (regexp, replaceValue) {\r\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\r\n      if (res.done) return res.value;\r\n\r\n      var rx = anObject(regexp);\r\n      var S = String(this);\r\n      var functionalReplace = typeof replaceValue === 'function';\r\n      if (!functionalReplace) replaceValue = String(replaceValue);\r\n      var global = rx.global;\r\n      if (global) {\r\n        var fullUnicode = rx.unicode;\r\n        rx.lastIndex = 0;\r\n      }\r\n      var results = [];\r\n      while (true) {\r\n        var result = regExpExec(rx, S);\r\n        if (result === null) break;\r\n        results.push(result);\r\n        if (!global) break;\r\n        var matchStr = String(result[0]);\r\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\r\n      }\r\n      var accumulatedResult = '';\r\n      var nextSourcePosition = 0;\r\n      for (var i = 0; i < results.length; i++) {\r\n        result = results[i];\r\n        var matched = String(result[0]);\r\n        var position = max(min(toInteger(result.index), S.length), 0);\r\n        var captures = [];\r\n        // NOTE: This is equivalent to\r\n        //   captures = result.slice(1).map(maybeToString)\r\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\r\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\r\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\r\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\r\n        var namedCaptures = result.groups;\r\n        if (functionalReplace) {\r\n          var replacerArgs = [matched].concat(captures, position, S);\r\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\r\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\r\n        } else {\r\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\r\n        }\r\n        if (position >= nextSourcePosition) {\r\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\r\n          nextSourcePosition = position + matched.length;\r\n        }\r\n      }\r\n      return accumulatedResult + S.slice(nextSourcePosition);\r\n    }\r\n  ];\r\n\r\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\r\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\r\n    var tailPos = position + matched.length;\r\n    var m = captures.length;\r\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\r\n    if (namedCaptures !== undefined) {\r\n      namedCaptures = toObject(namedCaptures);\r\n      symbols = SUBSTITUTION_SYMBOLS;\r\n    }\r\n    return $replace.call(replacement, symbols, function (match, ch) {\r\n      var capture;\r\n      switch (ch.charAt(0)) {\r\n        case '$': return '$';\r\n        case '&': return matched;\r\n        case '`': return str.slice(0, position);\r\n        case \"'\": return str.slice(tailPos);\r\n        case '<':\r\n          capture = namedCaptures[ch.slice(1, -1)];\r\n          break;\r\n        default: // \\d\\d?\r\n          var n = +ch;\r\n          if (n === 0) return match;\r\n          if (n > m) {\r\n            var f = floor(n / 10);\r\n            if (f === 0) return match;\r\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\r\n            return match;\r\n          }\r\n          capture = captures[n - 1];\r\n      }\r\n      return capture === undefined ? '' : capture;\r\n    });\r\n  }\r\n});\r\n"},"lineCount":120}},"error":null,"hash":"631f8cdef70104280f65ece731ec187a","cacheData":{"env":{}}}