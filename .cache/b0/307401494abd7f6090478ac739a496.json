{"id":"../../node_modules/core-js/modules/es6.regexp.match.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1685163281852},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1684371840936},{"name":"./_an-object","loc":{"line":3,"column":23,"index":40},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.regexp.match.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_an-object.js"},{"name":"./_to-length","loc":{"line":4,"column":23,"index":81},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.regexp.match.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_to-length.js"},{"name":"./_advance-string-index","loc":{"line":5,"column":33,"index":132},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.regexp.match.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_advance-string-index.js"},{"name":"./_regexp-exec-abstract","loc":{"line":6,"column":25,"index":186},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.regexp.match.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_regexp-exec-abstract.js"},{"name":"./_fix-re-wks","loc":{"line":9,"column":8,"index":243},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.regexp.match.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_fix-re-wks.js"}],"generated":{"js":"'use strict';\r\n\r\nvar anObject = require('./_an-object');\r\nvar toLength = require('./_to-length');\r\nvar advanceStringIndex = require('./_advance-string-index');\r\nvar regExpExec = require('./_regexp-exec-abstract');\r\n\r\n// @@match logic\r\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\r\n  return [\r\n    // `String.prototype.match` method\r\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\r\n    function match(regexp) {\r\n      var O = defined(this);\r\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\r\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\r\n    },\r\n    // `RegExp.prototype[@@match]` method\r\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\r\n    function (regexp) {\r\n      var res = maybeCallNative($match, regexp, this);\r\n      if (res.done) return res.value;\r\n      var rx = anObject(regexp);\r\n      var S = String(this);\r\n      if (!rx.global) return regExpExec(rx, S);\r\n      var fullUnicode = rx.unicode;\r\n      rx.lastIndex = 0;\r\n      var A = [];\r\n      var n = 0;\r\n      var result;\r\n      while ((result = regExpExec(rx, S)) !== null) {\r\n        var matchStr = String(result[0]);\r\n        A[n] = matchStr;\r\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\r\n        n++;\r\n      }\r\n      return n === 0 ? null : A;\r\n    }\r\n  ];\r\n});\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/core-js/modules/es6.regexp.match.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"../../node_modules/core-js/modules/es6.regexp.match.js":"'use strict';\r\n\r\nvar anObject = require('./_an-object');\r\nvar toLength = require('./_to-length');\r\nvar advanceStringIndex = require('./_advance-string-index');\r\nvar regExpExec = require('./_regexp-exec-abstract');\r\n\r\n// @@match logic\r\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\r\n  return [\r\n    // `String.prototype.match` method\r\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\r\n    function match(regexp) {\r\n      var O = defined(this);\r\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\r\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\r\n    },\r\n    // `RegExp.prototype[@@match]` method\r\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\r\n    function (regexp) {\r\n      var res = maybeCallNative($match, regexp, this);\r\n      if (res.done) return res.value;\r\n      var rx = anObject(regexp);\r\n      var S = String(this);\r\n      if (!rx.global) return regExpExec(rx, S);\r\n      var fullUnicode = rx.unicode;\r\n      rx.lastIndex = 0;\r\n      var A = [];\r\n      var n = 0;\r\n      var result;\r\n      while ((result = regExpExec(rx, S)) !== null) {\r\n        var matchStr = String(result[0]);\r\n        A[n] = matchStr;\r\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\r\n        n++;\r\n      }\r\n      return n === 0 ? null : A;\r\n    }\r\n  ];\r\n});\r\n"},"lineCount":41}},"error":null,"hash":"e0df40b7e80b848137711f206773091c","cacheData":{"env":{}}}