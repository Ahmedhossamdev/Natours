{"id":"../../node_modules/browserify-aes/encrypter.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\package.json","includedInParent":true,"mtime":1684371838479},{"name":"./modes","loc":{"line":1,"column":20,"index":20},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\encrypter.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\modes\\index.js"},{"name":"./authCipher","loc":{"line":2,"column":25,"index":57},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\encrypter.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\authCipher.js"},{"name":"safe-buffer","loc":{"line":3,"column":21,"index":95},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\encrypter.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\safe-buffer\\index.js"},{"name":"./streamCipher","loc":{"line":4,"column":27,"index":145},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\encrypter.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\streamCipher.js"},{"name":"cipher-base","loc":{"line":5,"column":24,"index":188},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\encrypter.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\cipher-base\\index.js"},{"name":"./aes","loc":{"line":6,"column":18,"index":222},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\encrypter.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\aes.js"},{"name":"evp_bytestokey","loc":{"line":7,"column":19,"index":251},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\encrypter.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\evp_bytestokey\\index.js"},{"name":"inherits","loc":{"line":8,"column":23,"index":293},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\encrypter.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\inherits\\inherits_browser.js"}],"generated":{"js":"\nvar MODES = require('./modes')\r\nvar AuthCipher = require('./authCipher')\r\nvar Buffer = require('safe-buffer').Buffer\r\nvar StreamCipher = require('./streamCipher')\r\nvar Transform = require('cipher-base')\r\nvar aes = require('./aes')\r\nvar ebtk = require('evp_bytestokey')\r\nvar inherits = require('inherits')\r\n\r\nfunction Cipher (mode, key, iv) {\r\n  Transform.call(this)\r\n\r\n  this._cache = new Splitter()\r\n  this._cipher = new aes.AES(key)\r\n  this._prev = Buffer.from(iv)\r\n  this._mode = mode\r\n  this._autopadding = true\r\n}\r\n\r\ninherits(Cipher, Transform)\r\n\r\nCipher.prototype._update = function (data) {\r\n  this._cache.add(data)\r\n  var chunk\r\n  var thing\r\n  var out = []\r\n\r\n  while ((chunk = this._cache.get())) {\r\n    thing = this._mode.encrypt(this, chunk)\r\n    out.push(thing)\r\n  }\r\n\r\n  return Buffer.concat(out)\r\n}\r\n\r\nvar PADDING = Buffer.alloc(16, 0x10)\r\n\r\nCipher.prototype._final = function () {\r\n  var chunk = this._cache.flush()\r\n  if (this._autopadding) {\r\n    chunk = this._mode.encrypt(this, chunk)\r\n    this._cipher.scrub()\r\n    return chunk\r\n  }\r\n\r\n  if (!chunk.equals(PADDING)) {\r\n    this._cipher.scrub()\r\n    throw new Error('data not multiple of block length')\r\n  }\r\n}\r\n\r\nCipher.prototype.setAutoPadding = function (setTo) {\r\n  this._autopadding = !!setTo\r\n  return this\r\n}\r\n\r\nfunction Splitter () {\r\n  this.cache = Buffer.allocUnsafe(0)\r\n}\r\n\r\nSplitter.prototype.add = function (data) {\r\n  this.cache = Buffer.concat([this.cache, data])\r\n}\r\n\r\nSplitter.prototype.get = function () {\r\n  if (this.cache.length > 15) {\r\n    var out = this.cache.slice(0, 16)\r\n    this.cache = this.cache.slice(16)\r\n    return out\r\n  }\r\n  return null\r\n}\r\n\r\nSplitter.prototype.flush = function () {\r\n  var len = 16 - this.cache.length\r\n  var padBuff = Buffer.allocUnsafe(len)\r\n\r\n  var i = -1\r\n  while (++i < len) {\r\n    padBuff.writeUInt8(len, i)\r\n  }\r\n\r\n  return Buffer.concat([this.cache, padBuff])\r\n}\r\n\r\nfunction createCipheriv (suite, password, iv) {\r\n  var config = MODES[suite.toLowerCase()]\r\n  if (!config) throw new TypeError('invalid suite type')\r\n\r\n  if (typeof password === 'string') password = Buffer.from(password)\r\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\r\n\r\n  if (typeof iv === 'string') iv = Buffer.from(iv)\r\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\r\n\r\n  if (config.type === 'stream') {\r\n    return new StreamCipher(config.module, password, iv)\r\n  } else if (config.type === 'auth') {\r\n    return new AuthCipher(config.module, password, iv)\r\n  }\r\n\r\n  return new Cipher(config.module, password, iv)\r\n}\r\n\r\nfunction createCipher (suite, password) {\r\n  var config = MODES[suite.toLowerCase()]\r\n  if (!config) throw new TypeError('invalid suite type')\r\n\r\n  var keys = ebtk(password, false, config.key, config.iv)\r\n  return createCipheriv(suite, keys.key, keys.iv)\r\n}\r\n\r\nexports.createCipheriv = createCipheriv\r\nexports.createCipher = createCipher\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/browserify-aes/encrypter.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}}],"sources":{"../../node_modules/browserify-aes/encrypter.js":"var MODES = require('./modes')\r\nvar AuthCipher = require('./authCipher')\r\nvar Buffer = require('safe-buffer').Buffer\r\nvar StreamCipher = require('./streamCipher')\r\nvar Transform = require('cipher-base')\r\nvar aes = require('./aes')\r\nvar ebtk = require('evp_bytestokey')\r\nvar inherits = require('inherits')\r\n\r\nfunction Cipher (mode, key, iv) {\r\n  Transform.call(this)\r\n\r\n  this._cache = new Splitter()\r\n  this._cipher = new aes.AES(key)\r\n  this._prev = Buffer.from(iv)\r\n  this._mode = mode\r\n  this._autopadding = true\r\n}\r\n\r\ninherits(Cipher, Transform)\r\n\r\nCipher.prototype._update = function (data) {\r\n  this._cache.add(data)\r\n  var chunk\r\n  var thing\r\n  var out = []\r\n\r\n  while ((chunk = this._cache.get())) {\r\n    thing = this._mode.encrypt(this, chunk)\r\n    out.push(thing)\r\n  }\r\n\r\n  return Buffer.concat(out)\r\n}\r\n\r\nvar PADDING = Buffer.alloc(16, 0x10)\r\n\r\nCipher.prototype._final = function () {\r\n  var chunk = this._cache.flush()\r\n  if (this._autopadding) {\r\n    chunk = this._mode.encrypt(this, chunk)\r\n    this._cipher.scrub()\r\n    return chunk\r\n  }\r\n\r\n  if (!chunk.equals(PADDING)) {\r\n    this._cipher.scrub()\r\n    throw new Error('data not multiple of block length')\r\n  }\r\n}\r\n\r\nCipher.prototype.setAutoPadding = function (setTo) {\r\n  this._autopadding = !!setTo\r\n  return this\r\n}\r\n\r\nfunction Splitter () {\r\n  this.cache = Buffer.allocUnsafe(0)\r\n}\r\n\r\nSplitter.prototype.add = function (data) {\r\n  this.cache = Buffer.concat([this.cache, data])\r\n}\r\n\r\nSplitter.prototype.get = function () {\r\n  if (this.cache.length > 15) {\r\n    var out = this.cache.slice(0, 16)\r\n    this.cache = this.cache.slice(16)\r\n    return out\r\n  }\r\n  return null\r\n}\r\n\r\nSplitter.prototype.flush = function () {\r\n  var len = 16 - this.cache.length\r\n  var padBuff = Buffer.allocUnsafe(len)\r\n\r\n  var i = -1\r\n  while (++i < len) {\r\n    padBuff.writeUInt8(len, i)\r\n  }\r\n\r\n  return Buffer.concat([this.cache, padBuff])\r\n}\r\n\r\nfunction createCipheriv (suite, password, iv) {\r\n  var config = MODES[suite.toLowerCase()]\r\n  if (!config) throw new TypeError('invalid suite type')\r\n\r\n  if (typeof password === 'string') password = Buffer.from(password)\r\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\r\n\r\n  if (typeof iv === 'string') iv = Buffer.from(iv)\r\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\r\n\r\n  if (config.type === 'stream') {\r\n    return new StreamCipher(config.module, password, iv)\r\n  } else if (config.type === 'auth') {\r\n    return new AuthCipher(config.module, password, iv)\r\n  }\r\n\r\n  return new Cipher(config.module, password, iv)\r\n}\r\n\r\nfunction createCipher (suite, password) {\r\n  var config = MODES[suite.toLowerCase()]\r\n  if (!config) throw new TypeError('invalid suite type')\r\n\r\n  var keys = ebtk(password, false, config.key, config.iv)\r\n  return createCipheriv(suite, keys.key, keys.iv)\r\n}\r\n\r\nexports.createCipheriv = createCipheriv\r\nexports.createCipher = createCipher\r\n"},"lineCount":116}},"error":null,"hash":"ae0ae06d0f3c9ee12f00426217370406","cacheData":{"env":{}}}