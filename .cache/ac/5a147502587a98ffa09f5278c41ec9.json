{"id":"../../node_modules/elliptic/lib/elliptic/utils.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\package.json","includedInParent":true,"mtime":1684371843179},{"name":"bn.js","loc":{"line":4,"column":17,"index":56},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\lib\\elliptic\\utils.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\node_modules\\bn.js\\lib\\bn.js"},{"name":"minimalistic-assert","loc":{"line":5,"column":24,"index":91},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\lib\\elliptic\\utils.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\minimalistic-assert\\index.js"},{"name":"minimalistic-crypto-utils","loc":{"line":6,"column":23,"index":139},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\elliptic\\lib\\elliptic\\utils.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\minimalistic-crypto-utils\\lib\\utils.js"}],"generated":{"js":"'use strict';\r\n\r\nvar utils = exports;\r\nvar BN = require('bn.js');\r\nvar minAssert = require('minimalistic-assert');\r\nvar minUtils = require('minimalistic-crypto-utils');\r\n\r\nutils.assert = minAssert;\r\nutils.toArray = minUtils.toArray;\r\nutils.zero2 = minUtils.zero2;\r\nutils.toHex = minUtils.toHex;\r\nutils.encode = minUtils.encode;\r\n\r\n// Represent num in a w-NAF form\r\nfunction getNAF(num, w, bits) {\r\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\r\n  naf.fill(0);\r\n\r\n  var ws = 1 << (w + 1);\r\n  var k = num.clone();\r\n\r\n  for (var i = 0; i < naf.length; i++) {\r\n    var z;\r\n    var mod = k.andln(ws - 1);\r\n    if (k.isOdd()) {\r\n      if (mod > (ws >> 1) - 1)\r\n        z = (ws >> 1) - mod;\r\n      else\r\n        z = mod;\r\n      k.isubn(z);\r\n    } else {\r\n      z = 0;\r\n    }\r\n\r\n    naf[i] = z;\r\n    k.iushrn(1);\r\n  }\r\n\r\n  return naf;\r\n}\r\nutils.getNAF = getNAF;\r\n\r\n// Represent k1, k2 in a Joint Sparse Form\r\nfunction getJSF(k1, k2) {\r\n  var jsf = [\r\n    [],\r\n    [],\r\n  ];\r\n\r\n  k1 = k1.clone();\r\n  k2 = k2.clone();\r\n  var d1 = 0;\r\n  var d2 = 0;\r\n  var m8;\r\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\r\n    // First phase\r\n    var m14 = (k1.andln(3) + d1) & 3;\r\n    var m24 = (k2.andln(3) + d2) & 3;\r\n    if (m14 === 3)\r\n      m14 = -1;\r\n    if (m24 === 3)\r\n      m24 = -1;\r\n    var u1;\r\n    if ((m14 & 1) === 0) {\r\n      u1 = 0;\r\n    } else {\r\n      m8 = (k1.andln(7) + d1) & 7;\r\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\r\n        u1 = -m14;\r\n      else\r\n        u1 = m14;\r\n    }\r\n    jsf[0].push(u1);\r\n\r\n    var u2;\r\n    if ((m24 & 1) === 0) {\r\n      u2 = 0;\r\n    } else {\r\n      m8 = (k2.andln(7) + d2) & 7;\r\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\r\n        u2 = -m24;\r\n      else\r\n        u2 = m24;\r\n    }\r\n    jsf[1].push(u2);\r\n\r\n    // Second phase\r\n    if (2 * d1 === u1 + 1)\r\n      d1 = 1 - d1;\r\n    if (2 * d2 === u2 + 1)\r\n      d2 = 1 - d2;\r\n    k1.iushrn(1);\r\n    k2.iushrn(1);\r\n  }\r\n\r\n  return jsf;\r\n}\r\nutils.getJSF = getJSF;\r\n\r\nfunction cachedProperty(obj, name, computer) {\r\n  var key = '_' + name;\r\n  obj.prototype[name] = function cachedProperty() {\r\n    return this[key] !== undefined ? this[key] :\r\n      this[key] = computer.call(this);\r\n  };\r\n}\r\nutils.cachedProperty = cachedProperty;\r\n\r\nfunction parseBytes(bytes) {\r\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\r\n    bytes;\r\n}\r\nutils.parseBytes = parseBytes;\r\n\r\nfunction intFromLE(bytes) {\r\n  return new BN(bytes, 'hex', 'le');\r\n}\r\nutils.intFromLE = intFromLE;\r\n\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/elliptic/lib/elliptic/utils.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}}],"sources":{"../../node_modules/elliptic/lib/elliptic/utils.js":"'use strict';\r\n\r\nvar utils = exports;\r\nvar BN = require('bn.js');\r\nvar minAssert = require('minimalistic-assert');\r\nvar minUtils = require('minimalistic-crypto-utils');\r\n\r\nutils.assert = minAssert;\r\nutils.toArray = minUtils.toArray;\r\nutils.zero2 = minUtils.zero2;\r\nutils.toHex = minUtils.toHex;\r\nutils.encode = minUtils.encode;\r\n\r\n// Represent num in a w-NAF form\r\nfunction getNAF(num, w, bits) {\r\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\r\n  naf.fill(0);\r\n\r\n  var ws = 1 << (w + 1);\r\n  var k = num.clone();\r\n\r\n  for (var i = 0; i < naf.length; i++) {\r\n    var z;\r\n    var mod = k.andln(ws - 1);\r\n    if (k.isOdd()) {\r\n      if (mod > (ws >> 1) - 1)\r\n        z = (ws >> 1) - mod;\r\n      else\r\n        z = mod;\r\n      k.isubn(z);\r\n    } else {\r\n      z = 0;\r\n    }\r\n\r\n    naf[i] = z;\r\n    k.iushrn(1);\r\n  }\r\n\r\n  return naf;\r\n}\r\nutils.getNAF = getNAF;\r\n\r\n// Represent k1, k2 in a Joint Sparse Form\r\nfunction getJSF(k1, k2) {\r\n  var jsf = [\r\n    [],\r\n    [],\r\n  ];\r\n\r\n  k1 = k1.clone();\r\n  k2 = k2.clone();\r\n  var d1 = 0;\r\n  var d2 = 0;\r\n  var m8;\r\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\r\n    // First phase\r\n    var m14 = (k1.andln(3) + d1) & 3;\r\n    var m24 = (k2.andln(3) + d2) & 3;\r\n    if (m14 === 3)\r\n      m14 = -1;\r\n    if (m24 === 3)\r\n      m24 = -1;\r\n    var u1;\r\n    if ((m14 & 1) === 0) {\r\n      u1 = 0;\r\n    } else {\r\n      m8 = (k1.andln(7) + d1) & 7;\r\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\r\n        u1 = -m14;\r\n      else\r\n        u1 = m14;\r\n    }\r\n    jsf[0].push(u1);\r\n\r\n    var u2;\r\n    if ((m24 & 1) === 0) {\r\n      u2 = 0;\r\n    } else {\r\n      m8 = (k2.andln(7) + d2) & 7;\r\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\r\n        u2 = -m24;\r\n      else\r\n        u2 = m24;\r\n    }\r\n    jsf[1].push(u2);\r\n\r\n    // Second phase\r\n    if (2 * d1 === u1 + 1)\r\n      d1 = 1 - d1;\r\n    if (2 * d2 === u2 + 1)\r\n      d2 = 1 - d2;\r\n    k1.iushrn(1);\r\n    k2.iushrn(1);\r\n  }\r\n\r\n  return jsf;\r\n}\r\nutils.getJSF = getJSF;\r\n\r\nfunction cachedProperty(obj, name, computer) {\r\n  var key = '_' + name;\r\n  obj.prototype[name] = function cachedProperty() {\r\n    return this[key] !== undefined ? this[key] :\r\n      this[key] = computer.call(this);\r\n  };\r\n}\r\nutils.cachedProperty = cachedProperty;\r\n\r\nfunction parseBytes(bytes) {\r\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\r\n    bytes;\r\n}\r\nutils.parseBytes = parseBytes;\r\n\r\nfunction intFromLE(bytes) {\r\n  return new BN(bytes, 'hex', 'le');\r\n}\r\nutils.intFromLE = intFromLE;\r\n\r\n"},"lineCount":120}},"error":null,"hash":"2552960ea8562b4ab2d87b5043291c81","cacheData":{"env":{}}}