{"id":"../../node_modules/core-js/modules/es6.string.from-code-point.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1685834933886},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1684371840936},{"name":"./_export","loc":{"line":1,"column":22,"index":22},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.string.from-code-point.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_export.js"},{"name":"./_to-absolute-index","loc":{"line":2,"column":30,"index":67},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.string.from-code-point.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_to-absolute-index.js"}],"generated":{"js":"var $export = require('./_export');\r\nvar toAbsoluteIndex = require('./_to-absolute-index');\r\nvar fromCharCode = String.fromCharCode;\r\nvar $fromCodePoint = String.fromCodePoint;\r\n\r\n// length should be 1, old FF problem\r\n$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\r\n  // 21.1.2.2 String.fromCodePoint(...codePoints)\r\n  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars\r\n    var res = [];\r\n    var aLen = arguments.length;\r\n    var i = 0;\r\n    var code;\r\n    while (aLen > i) {\r\n      code = +arguments[i++];\r\n      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');\r\n      res.push(code < 0x10000\r\n        ? fromCharCode(code)\r\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\r\n      );\r\n    } return res.join('');\r\n  }\r\n});\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"../../node_modules/core-js/modules/es6.string.from-code-point.js":"var $export = require('./_export');\r\nvar toAbsoluteIndex = require('./_to-absolute-index');\r\nvar fromCharCode = String.fromCharCode;\r\nvar $fromCodePoint = String.fromCodePoint;\r\n\r\n// length should be 1, old FF problem\r\n$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\r\n  // 21.1.2.2 String.fromCodePoint(...codePoints)\r\n  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars\r\n    var res = [];\r\n    var aLen = arguments.length;\r\n    var i = 0;\r\n    var code;\r\n    while (aLen > i) {\r\n      code = +arguments[i++];\r\n      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');\r\n      res.push(code < 0x10000\r\n        ? fromCharCode(code)\r\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\r\n      );\r\n    } return res.join('');\r\n  }\r\n});\r\n"},"lineCount":24}},"error":null,"hash":"1bba5302bc40d810f63cf4cdb367d8a5","cacheData":{"env":{}}}