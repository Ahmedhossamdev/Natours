{"dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1685934625119},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\stream-http\\package.json","includedInParent":true,"mtime":1684371861530}],"generated":{"js":"var global = arguments[3];\nexports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\r\n\r\nexports.writableStream = isFunction(global.WritableStream)\r\n\r\nexports.abortController = isFunction(global.AbortController)\r\n\r\nexports.blobConstructor = false\r\ntry {\r\n\tnew Blob([new ArrayBuffer(1)])\r\n\texports.blobConstructor = true\r\n} catch (e) {}\r\n\r\n// The xhr request to example.com may violate some restrictive CSP configurations,\r\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\r\n// and assume support for certain features below.\r\nvar xhr\r\nfunction getXHR () {\r\n\t// Cache the xhr value\r\n\tif (xhr !== undefined) return xhr\r\n\r\n\tif (global.XMLHttpRequest) {\r\n\t\txhr = new global.XMLHttpRequest()\r\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\r\n\t\t// cross domain), use the page location. Otherwise use example.com\r\n\t\t// Note: this doesn't actually make an http request.\r\n\t\ttry {\r\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\r\n\t\t} catch(e) {\r\n\t\t\txhr = null\r\n\t\t}\r\n\t} else {\r\n\t\t// Service workers don't have XHR\r\n\t\txhr = null\r\n\t}\r\n\treturn xhr\r\n}\r\n\r\nfunction checkTypeSupport (type) {\r\n\tvar xhr = getXHR()\r\n\tif (!xhr) return false\r\n\ttry {\r\n\t\txhr.responseType = type\r\n\t\treturn xhr.responseType === type\r\n\t} catch (e) {}\r\n\treturn false\r\n}\r\n\r\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\r\n// Safari 7.1 appears to have fixed this bug.\r\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\r\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\r\n\r\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\r\n// checkTypeSupport(), since that calls getXHR().\r\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\r\n\r\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\r\n// be used if it's available, just return false for these to avoid the warnings.\r\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\r\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\r\n\tcheckTypeSupport('moz-chunked-arraybuffer')\r\n\r\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\r\n// getXHR().\r\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\r\n\r\nexports.vbArray = isFunction(global.VBArray)\r\n\r\nfunction isFunction (value) {\r\n\treturn typeof value === 'function'\r\n}\r\n\r\nxhr = null // Help gc\r\n","map":{"mappings":[{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"..\\..\\node_modules\\stream-http\\lib\\capability.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}}],"sources":{"..\\..\\node_modules\\stream-http\\lib\\capability.js":"exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\r\n\r\nexports.writableStream = isFunction(global.WritableStream)\r\n\r\nexports.abortController = isFunction(global.AbortController)\r\n\r\nexports.blobConstructor = false\r\ntry {\r\n\tnew Blob([new ArrayBuffer(1)])\r\n\texports.blobConstructor = true\r\n} catch (e) {}\r\n\r\n// The xhr request to example.com may violate some restrictive CSP configurations,\r\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\r\n// and assume support for certain features below.\r\nvar xhr\r\nfunction getXHR () {\r\n\t// Cache the xhr value\r\n\tif (xhr !== undefined) return xhr\r\n\r\n\tif (global.XMLHttpRequest) {\r\n\t\txhr = new global.XMLHttpRequest()\r\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\r\n\t\t// cross domain), use the page location. Otherwise use example.com\r\n\t\t// Note: this doesn't actually make an http request.\r\n\t\ttry {\r\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\r\n\t\t} catch(e) {\r\n\t\t\txhr = null\r\n\t\t}\r\n\t} else {\r\n\t\t// Service workers don't have XHR\r\n\t\txhr = null\r\n\t}\r\n\treturn xhr\r\n}\r\n\r\nfunction checkTypeSupport (type) {\r\n\tvar xhr = getXHR()\r\n\tif (!xhr) return false\r\n\ttry {\r\n\t\txhr.responseType = type\r\n\t\treturn xhr.responseType === type\r\n\t} catch (e) {}\r\n\treturn false\r\n}\r\n\r\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\r\n// Safari 7.1 appears to have fixed this bug.\r\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\r\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\r\n\r\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\r\n// checkTypeSupport(), since that calls getXHR().\r\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\r\n\r\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\r\n// be used if it's available, just return false for these to avoid the warnings.\r\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\r\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\r\n\tcheckTypeSupport('moz-chunked-arraybuffer')\r\n\r\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\r\n// getXHR().\r\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\r\n\r\nexports.vbArray = isFunction(global.VBArray)\r\n\r\nfunction isFunction (value) {\r\n\treturn typeof value === 'function'\r\n}\r\n\r\nxhr = null // Help gc\r\n"},"lineCount":75}},"hash":"854dfe32494fcb5fe4739004defe1d2b","cacheData":{"env":{}}}