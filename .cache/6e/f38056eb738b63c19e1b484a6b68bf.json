{"id":"../../node_modules/browserify-aes/modes/cfb8.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\package.json","includedInParent":true,"mtime":1684371838479},{"name":"safe-buffer","loc":{"line":1,"column":21,"index":21},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\modes\\cfb8.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\safe-buffer\\index.js"}],"generated":{"js":"\nvar Buffer = require('safe-buffer').Buffer\r\n\r\nfunction encryptByte (self, byteParam, decrypt) {\r\n  var pad = self._cipher.encryptBlock(self._prev)\r\n  var out = pad[0] ^ byteParam\r\n\r\n  self._prev = Buffer.concat([\r\n    self._prev.slice(1),\r\n    Buffer.from([decrypt ? byteParam : out])\r\n  ])\r\n\r\n  return out\r\n}\r\n\r\nexports.encrypt = function (self, chunk, decrypt) {\r\n  var len = chunk.length\r\n  var out = Buffer.allocUnsafe(len)\r\n  var i = -1\r\n\r\n  while (++i < len) {\r\n    out[i] = encryptByte(self, chunk[i], decrypt)\r\n  }\r\n\r\n  return out\r\n}\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/browserify-aes/modes/cfb8.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}}],"sources":{"../../node_modules/browserify-aes/modes/cfb8.js":"var Buffer = require('safe-buffer').Buffer\r\n\r\nfunction encryptByte (self, byteParam, decrypt) {\r\n  var pad = self._cipher.encryptBlock(self._prev)\r\n  var out = pad[0] ^ byteParam\r\n\r\n  self._prev = Buffer.concat([\r\n    self._prev.slice(1),\r\n    Buffer.from([decrypt ? byteParam : out])\r\n  ])\r\n\r\n  return out\r\n}\r\n\r\nexports.encrypt = function (self, chunk, decrypt) {\r\n  var len = chunk.length\r\n  var out = Buffer.allocUnsafe(len)\r\n  var i = -1\r\n\r\n  while (++i < len) {\r\n    out[i] = encryptByte(self, chunk[i], decrypt)\r\n  }\r\n\r\n  return out\r\n}\r\n"},"lineCount":27}},"error":null,"hash":"13c48e06239aed22e66cb0b26db5c4fa","cacheData":{"env":{}}}