{"id":"../../node_modules/public-encrypt/privateDecrypt.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\public-encrypt\\package.json","includedInParent":true,"mtime":1684371854473},{"name":"parse-asn1","loc":{"line":1,"column":24,"index":24},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\public-encrypt\\privateDecrypt.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\parse-asn1\\index.js"},{"name":"./mgf","loc":{"line":2,"column":18,"index":57},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\public-encrypt\\privateDecrypt.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\public-encrypt\\mgf.js"},{"name":"./xor","loc":{"line":3,"column":18,"index":85},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\public-encrypt\\privateDecrypt.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\public-encrypt\\xor.js"},{"name":"bn.js","loc":{"line":4,"column":17,"index":112},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\public-encrypt\\privateDecrypt.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\public-encrypt\\node_modules\\bn.js\\lib\\bn.js"},{"name":"browserify-rsa","loc":{"line":5,"column":18,"index":140},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\public-encrypt\\privateDecrypt.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-rsa\\index.js"},{"name":"create-hash","loc":{"line":6,"column":25,"index":184},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\public-encrypt\\privateDecrypt.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\create-hash\\browser.js"},{"name":"./withPublic","loc":{"line":7,"column":25,"index":225},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\public-encrypt\\privateDecrypt.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\public-encrypt\\withPublic.js"},{"name":"safe-buffer","loc":{"line":8,"column":21,"index":263},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\public-encrypt\\privateDecrypt.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\safe-buffer\\index.js"}],"generated":{"js":"\nvar parseKeys = require('parse-asn1')\r\nvar mgf = require('./mgf')\r\nvar xor = require('./xor')\r\nvar BN = require('bn.js')\r\nvar crt = require('browserify-rsa')\r\nvar createHash = require('create-hash')\r\nvar withPublic = require('./withPublic')\r\nvar Buffer = require('safe-buffer').Buffer\r\n\r\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\r\n  var padding\r\n  if (privateKey.padding) {\r\n    padding = privateKey.padding\r\n  } else if (reverse) {\r\n    padding = 1\r\n  } else {\r\n    padding = 4\r\n  }\r\n\r\n  var key = parseKeys(privateKey)\r\n  var k = key.modulus.byteLength()\r\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\r\n    throw new Error('decryption error')\r\n  }\r\n  var msg\r\n  if (reverse) {\r\n    msg = withPublic(new BN(enc), key)\r\n  } else {\r\n    msg = crt(enc, key)\r\n  }\r\n  var zBuffer = Buffer.alloc(k - msg.length)\r\n  msg = Buffer.concat([zBuffer, msg], k)\r\n  if (padding === 4) {\r\n    return oaep(key, msg)\r\n  } else if (padding === 1) {\r\n    return pkcs1(key, msg, reverse)\r\n  } else if (padding === 3) {\r\n    return msg\r\n  } else {\r\n    throw new Error('unknown padding')\r\n  }\r\n}\r\n\r\nfunction oaep (key, msg) {\r\n  var k = key.modulus.byteLength()\r\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\r\n  var hLen = iHash.length\r\n  if (msg[0] !== 0) {\r\n    throw new Error('decryption error')\r\n  }\r\n  var maskedSeed = msg.slice(1, hLen + 1)\r\n  var maskedDb = msg.slice(hLen + 1)\r\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\r\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\r\n  if (compare(iHash, db.slice(0, hLen))) {\r\n    throw new Error('decryption error')\r\n  }\r\n  var i = hLen\r\n  while (db[i] === 0) {\r\n    i++\r\n  }\r\n  if (db[i++] !== 1) {\r\n    throw new Error('decryption error')\r\n  }\r\n  return db.slice(i)\r\n}\r\n\r\nfunction pkcs1 (key, msg, reverse) {\r\n  var p1 = msg.slice(0, 2)\r\n  var i = 2\r\n  var status = 0\r\n  while (msg[i++] !== 0) {\r\n    if (i >= msg.length) {\r\n      status++\r\n      break\r\n    }\r\n  }\r\n  var ps = msg.slice(2, i - 1)\r\n\r\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\r\n    status++\r\n  }\r\n  if (ps.length < 8) {\r\n    status++\r\n  }\r\n  if (status) {\r\n    throw new Error('decryption error')\r\n  }\r\n  return msg.slice(i)\r\n}\r\nfunction compare (a, b) {\r\n  a = Buffer.from(a)\r\n  b = Buffer.from(b)\r\n  var dif = 0\r\n  var len = a.length\r\n  if (a.length !== b.length) {\r\n    dif++\r\n    len = Math.min(a.length, b.length)\r\n  }\r\n  var i = -1\r\n  while (++i < len) {\r\n    dif += (a[i] ^ b[i])\r\n  }\r\n  return dif\r\n}\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/public-encrypt/privateDecrypt.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}}],"sources":{"../../node_modules/public-encrypt/privateDecrypt.js":"var parseKeys = require('parse-asn1')\r\nvar mgf = require('./mgf')\r\nvar xor = require('./xor')\r\nvar BN = require('bn.js')\r\nvar crt = require('browserify-rsa')\r\nvar createHash = require('create-hash')\r\nvar withPublic = require('./withPublic')\r\nvar Buffer = require('safe-buffer').Buffer\r\n\r\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\r\n  var padding\r\n  if (privateKey.padding) {\r\n    padding = privateKey.padding\r\n  } else if (reverse) {\r\n    padding = 1\r\n  } else {\r\n    padding = 4\r\n  }\r\n\r\n  var key = parseKeys(privateKey)\r\n  var k = key.modulus.byteLength()\r\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\r\n    throw new Error('decryption error')\r\n  }\r\n  var msg\r\n  if (reverse) {\r\n    msg = withPublic(new BN(enc), key)\r\n  } else {\r\n    msg = crt(enc, key)\r\n  }\r\n  var zBuffer = Buffer.alloc(k - msg.length)\r\n  msg = Buffer.concat([zBuffer, msg], k)\r\n  if (padding === 4) {\r\n    return oaep(key, msg)\r\n  } else if (padding === 1) {\r\n    return pkcs1(key, msg, reverse)\r\n  } else if (padding === 3) {\r\n    return msg\r\n  } else {\r\n    throw new Error('unknown padding')\r\n  }\r\n}\r\n\r\nfunction oaep (key, msg) {\r\n  var k = key.modulus.byteLength()\r\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\r\n  var hLen = iHash.length\r\n  if (msg[0] !== 0) {\r\n    throw new Error('decryption error')\r\n  }\r\n  var maskedSeed = msg.slice(1, hLen + 1)\r\n  var maskedDb = msg.slice(hLen + 1)\r\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\r\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\r\n  if (compare(iHash, db.slice(0, hLen))) {\r\n    throw new Error('decryption error')\r\n  }\r\n  var i = hLen\r\n  while (db[i] === 0) {\r\n    i++\r\n  }\r\n  if (db[i++] !== 1) {\r\n    throw new Error('decryption error')\r\n  }\r\n  return db.slice(i)\r\n}\r\n\r\nfunction pkcs1 (key, msg, reverse) {\r\n  var p1 = msg.slice(0, 2)\r\n  var i = 2\r\n  var status = 0\r\n  while (msg[i++] !== 0) {\r\n    if (i >= msg.length) {\r\n      status++\r\n      break\r\n    }\r\n  }\r\n  var ps = msg.slice(2, i - 1)\r\n\r\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\r\n    status++\r\n  }\r\n  if (ps.length < 8) {\r\n    status++\r\n  }\r\n  if (status) {\r\n    throw new Error('decryption error')\r\n  }\r\n  return msg.slice(i)\r\n}\r\nfunction compare (a, b) {\r\n  a = Buffer.from(a)\r\n  b = Buffer.from(b)\r\n  var dif = 0\r\n  var len = a.length\r\n  if (a.length !== b.length) {\r\n    dif++\r\n    len = Math.min(a.length, b.length)\r\n  }\r\n  var i = -1\r\n  while (++i < len) {\r\n    dif += (a[i] ^ b[i])\r\n  }\r\n  return dif\r\n}\r\n"},"lineCount":107}},"error":null,"hash":"85f07c510de266d26220e380fa6f043f","cacheData":{"env":{}}}