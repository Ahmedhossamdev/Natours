{"id":"../../node_modules/evp_bytestokey/index.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\evp_bytestokey\\package.json","includedInParent":true,"mtime":1684371847340},{"name":"safe-buffer","loc":{"line":1,"column":21,"index":21},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\evp_bytestokey\\index.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\safe-buffer\\index.js"},{"name":"md5.js","loc":{"line":2,"column":18,"index":62},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\evp_bytestokey\\index.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\md5.js\\index.js"}],"generated":{"js":"\nvar Buffer = require('safe-buffer').Buffer\r\nvar MD5 = require('md5.js')\r\n\r\n/* eslint-disable camelcase */\r\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\r\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\r\n  if (salt) {\r\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\r\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\r\n  }\r\n\r\n  var keyLen = keyBits / 8\r\n  var key = Buffer.alloc(keyLen)\r\n  var iv = Buffer.alloc(ivLen || 0)\r\n  var tmp = Buffer.alloc(0)\r\n\r\n  while (keyLen > 0 || ivLen > 0) {\r\n    var hash = new MD5()\r\n    hash.update(tmp)\r\n    hash.update(password)\r\n    if (salt) hash.update(salt)\r\n    tmp = hash.digest()\r\n\r\n    var used = 0\r\n\r\n    if (keyLen > 0) {\r\n      var keyStart = key.length - keyLen\r\n      used = Math.min(keyLen, tmp.length)\r\n      tmp.copy(key, keyStart, 0, used)\r\n      keyLen -= used\r\n    }\r\n\r\n    if (used < tmp.length && ivLen > 0) {\r\n      var ivStart = iv.length - ivLen\r\n      var length = Math.min(ivLen, tmp.length - used)\r\n      tmp.copy(iv, ivStart, used, used + length)\r\n      ivLen -= length\r\n    }\r\n  }\r\n\r\n  tmp.fill(0)\r\n  return { key: key, iv: iv }\r\n}\r\n\r\nmodule.exports = EVP_BytesToKey\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/evp_bytestokey/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}}],"sources":{"../../node_modules/evp_bytestokey/index.js":"var Buffer = require('safe-buffer').Buffer\r\nvar MD5 = require('md5.js')\r\n\r\n/* eslint-disable camelcase */\r\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\r\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\r\n  if (salt) {\r\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\r\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\r\n  }\r\n\r\n  var keyLen = keyBits / 8\r\n  var key = Buffer.alloc(keyLen)\r\n  var iv = Buffer.alloc(ivLen || 0)\r\n  var tmp = Buffer.alloc(0)\r\n\r\n  while (keyLen > 0 || ivLen > 0) {\r\n    var hash = new MD5()\r\n    hash.update(tmp)\r\n    hash.update(password)\r\n    if (salt) hash.update(salt)\r\n    tmp = hash.digest()\r\n\r\n    var used = 0\r\n\r\n    if (keyLen > 0) {\r\n      var keyStart = key.length - keyLen\r\n      used = Math.min(keyLen, tmp.length)\r\n      tmp.copy(key, keyStart, 0, used)\r\n      keyLen -= used\r\n    }\r\n\r\n    if (used < tmp.length && ivLen > 0) {\r\n      var ivStart = iv.length - ivLen\r\n      var length = Math.min(ivLen, tmp.length - used)\r\n      tmp.copy(iv, ivStart, used, used + length)\r\n      ivLen -= length\r\n    }\r\n  }\r\n\r\n  tmp.fill(0)\r\n  return { key: key, iv: iv }\r\n}\r\n\r\nmodule.exports = EVP_BytesToKey\r\n"},"lineCount":47}},"error":null,"hash":"44268c2a1820733dab0017fdd6713527","cacheData":{"env":{}}}