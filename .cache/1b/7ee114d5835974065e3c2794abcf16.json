{"id":"../../node_modules/core-js/modules/es6.math.hypot.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1684371840936},{"name":"./_export","loc":{"line":2,"column":22,"index":73},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\es6.math.hypot.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_export.js"}],"generated":{"js":"// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\r\nvar $export = require('./_export');\r\nvar abs = Math.abs;\r\n\r\n$export($export.S, 'Math', {\r\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\r\n    var sum = 0;\r\n    var i = 0;\r\n    var aLen = arguments.length;\r\n    var larg = 0;\r\n    var arg, div;\r\n    while (i < aLen) {\r\n      arg = abs(arguments[i++]);\r\n      if (larg < arg) {\r\n        div = larg / arg;\r\n        sum = sum * div * div + 1;\r\n        larg = arg;\r\n      } else if (arg > 0) {\r\n        div = arg / larg;\r\n        sum += div * div;\r\n      } else sum += arg;\r\n    }\r\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\r\n  }\r\n});\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}}],"sources":{"../../node_modules/core-js/modules/es6.math.hypot.js":"// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\r\nvar $export = require('./_export');\r\nvar abs = Math.abs;\r\n\r\n$export($export.S, 'Math', {\r\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\r\n    var sum = 0;\r\n    var i = 0;\r\n    var aLen = arguments.length;\r\n    var larg = 0;\r\n    var arg, div;\r\n    while (i < aLen) {\r\n      arg = abs(arguments[i++]);\r\n      if (larg < arg) {\r\n        div = larg / arg;\r\n        sum = sum * div * div + 1;\r\n        larg = arg;\r\n      } else if (arg > 0) {\r\n        div = arg / larg;\r\n        sum += div * div;\r\n      } else sum += arg;\r\n    }\r\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\r\n  }\r\n});\r\n"},"lineCount":26}},"error":null,"hash":"460ac0c3280bb1a8688f404825a16296","cacheData":{"env":{}}}