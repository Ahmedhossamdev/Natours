{"id":"../../node_modules/core-js/modules/_regexp-exec.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1685834933886},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1684371840936},{"name":"./_flags","loc":{"line":3,"column":26,"index":43},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_regexp-exec.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\modules\\_flags.js"}],"generated":{"js":"'use strict';\r\n\r\nvar regexpFlags = require('./_flags');\r\n\r\nvar nativeExec = RegExp.prototype.exec;\r\n// This always refers to the native implementation, because the\r\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\r\n// which loads this file before patching the method.\r\nvar nativeReplace = String.prototype.replace;\r\n\r\nvar patchedExec = nativeExec;\r\n\r\nvar LAST_INDEX = 'lastIndex';\r\n\r\nvar UPDATES_LAST_INDEX_WRONG = (function () {\r\n  var re1 = /a/,\r\n      re2 = /b*/g;\r\n  nativeExec.call(re1, 'a');\r\n  nativeExec.call(re2, 'a');\r\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\r\n})();\r\n\r\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\r\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\r\n\r\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\r\n\r\nif (PATCH) {\r\n  patchedExec = function exec(str) {\r\n    var re = this;\r\n    var lastIndex, reCopy, match, i;\r\n\r\n    if (NPCG_INCLUDED) {\r\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\r\n    }\r\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\r\n\r\n    match = nativeExec.call(re, str);\r\n\r\n    if (UPDATES_LAST_INDEX_WRONG && match) {\r\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\r\n    }\r\n    if (NPCG_INCLUDED && match && match.length > 1) {\r\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\r\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\r\n      // eslint-disable-next-line no-loop-func\r\n      nativeReplace.call(match[0], reCopy, function () {\r\n        for (i = 1; i < arguments.length - 2; i++) {\r\n          if (arguments[i] === undefined) match[i] = undefined;\r\n        }\r\n      });\r\n    }\r\n\r\n    return match;\r\n  };\r\n}\r\n\r\nmodule.exports = patchedExec;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}}],"sources":{"../../node_modules/core-js/modules/_regexp-exec.js":"'use strict';\r\n\r\nvar regexpFlags = require('./_flags');\r\n\r\nvar nativeExec = RegExp.prototype.exec;\r\n// This always refers to the native implementation, because the\r\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\r\n// which loads this file before patching the method.\r\nvar nativeReplace = String.prototype.replace;\r\n\r\nvar patchedExec = nativeExec;\r\n\r\nvar LAST_INDEX = 'lastIndex';\r\n\r\nvar UPDATES_LAST_INDEX_WRONG = (function () {\r\n  var re1 = /a/,\r\n      re2 = /b*/g;\r\n  nativeExec.call(re1, 'a');\r\n  nativeExec.call(re2, 'a');\r\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\r\n})();\r\n\r\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\r\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\r\n\r\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\r\n\r\nif (PATCH) {\r\n  patchedExec = function exec(str) {\r\n    var re = this;\r\n    var lastIndex, reCopy, match, i;\r\n\r\n    if (NPCG_INCLUDED) {\r\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\r\n    }\r\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\r\n\r\n    match = nativeExec.call(re, str);\r\n\r\n    if (UPDATES_LAST_INDEX_WRONG && match) {\r\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\r\n    }\r\n    if (NPCG_INCLUDED && match && match.length > 1) {\r\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\r\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\r\n      // eslint-disable-next-line no-loop-func\r\n      nativeReplace.call(match[0], reCopy, function () {\r\n        for (i = 1; i < arguments.length - 2; i++) {\r\n          if (arguments[i] === undefined) match[i] = undefined;\r\n        }\r\n      });\r\n    }\r\n\r\n    return match;\r\n  };\r\n}\r\n\r\nmodule.exports = patchedExec;\r\n"},"lineCount":59}},"error":null,"hash":"3ec78b3c1f029242ecd0e920d3a00740","cacheData":{"env":{}}}