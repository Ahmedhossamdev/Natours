{"dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1685934625119},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1684371840936},{"name":"./_export","loc":{"line":2,"column":22}},{"name":"./_math-log1p","loc":{"line":3,"column":20}}],"generated":{"js":"// 20.2.2.3 Math.acosh(x)\r\nvar $export = require('./_export');\r\nvar log1p = require('./_math-log1p');\r\nvar sqrt = Math.sqrt;\r\nvar $acosh = Math.acosh;\r\n\r\n$export($export.S + $export.F * !($acosh\r\n  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\r\n  && Math.floor($acosh(Number.MAX_VALUE)) == 710\r\n  // Tor Browser bug: Math.acosh(Infinity) -> NaN\r\n  && $acosh(Infinity) == Infinity\r\n), 'Math', {\r\n  acosh: function acosh(x) {\r\n    return (x = +x) < 1 ? NaN : x > 94906265.62425156\r\n      ? Math.log(x) + Math.LN2\r\n      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\r\n  }\r\n});\r\n","map":{"mappings":[{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"..\\..\\node_modules\\core-js\\modules\\es6.math.acosh.js":"// 20.2.2.3 Math.acosh(x)\r\nvar $export = require('./_export');\r\nvar log1p = require('./_math-log1p');\r\nvar sqrt = Math.sqrt;\r\nvar $acosh = Math.acosh;\r\n\r\n$export($export.S + $export.F * !($acosh\r\n  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\r\n  && Math.floor($acosh(Number.MAX_VALUE)) == 710\r\n  // Tor Browser bug: Math.acosh(Infinity) -> NaN\r\n  && $acosh(Infinity) == Infinity\r\n), 'Math', {\r\n  acosh: function acosh(x) {\r\n    return (x = +x) < 1 ? NaN : x > 94906265.62425156\r\n      ? Math.log(x) + Math.LN2\r\n      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\r\n  }\r\n});\r\n"},"lineCount":19}},"hash":"330a080c357c369cf3160d319ba73355","cacheData":{"env":{}}}