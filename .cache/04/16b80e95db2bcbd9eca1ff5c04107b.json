{"id":"../../node_modules/safer-buffer/safer.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\safer-buffer\\package.json","includedInParent":true,"mtime":1684371860819},{"name":"buffer","loc":{"line":5,"column":21,"index":84},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\safer-buffer\\safer.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\buffer\\index.js"},{"name":"process","parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\safer-buffer\\safer.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\process\\browser.js"}],"generated":{"js":"\nvar process = require(\"process\");\n/* eslint-disable node/no-deprecated-api */\r\n\r\n'use strict'\r\n\r\nvar buffer = require('buffer')\r\nvar Buffer = buffer.Buffer\r\n\r\nvar safer = {}\r\n\r\nvar key\r\n\r\nfor (key in buffer) {\r\n  if (!buffer.hasOwnProperty(key)) continue\r\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\r\n  safer[key] = buffer[key]\r\n}\r\n\r\nvar Safer = safer.Buffer = {}\r\nfor (key in Buffer) {\r\n  if (!Buffer.hasOwnProperty(key)) continue\r\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\r\n  Safer[key] = Buffer[key]\r\n}\r\n\r\nsafer.Buffer.prototype = Buffer.prototype\r\n\r\nif (!Safer.from || Safer.from === Uint8Array.from) {\r\n  Safer.from = function (value, encodingOrOffset, length) {\r\n    if (typeof value === 'number') {\r\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\r\n    }\r\n    if (value && typeof value.length === 'undefined') {\r\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\r\n    }\r\n    return Buffer(value, encodingOrOffset, length)\r\n  }\r\n}\r\n\r\nif (!Safer.alloc) {\r\n  Safer.alloc = function (size, fill, encoding) {\r\n    if (typeof size !== 'number') {\r\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\r\n    }\r\n    if (size < 0 || size >= 2 * (1 << 30)) {\r\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\r\n    }\r\n    var buf = Buffer(size)\r\n    if (!fill || fill.length === 0) {\r\n      buf.fill(0)\r\n    } else if (typeof encoding === 'string') {\r\n      buf.fill(fill, encoding)\r\n    } else {\r\n      buf.fill(fill)\r\n    }\r\n    return buf\r\n  }\r\n}\r\n\r\nif (!safer.kStringMaxLength) {\r\n  try {\r\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\r\n  } catch (e) {\r\n    // we can't determine kStringMaxLength in environments where process.binding\r\n    // is unsupported, so let's not set it\r\n  }\r\n}\r\n\r\nif (!safer.constants) {\r\n  safer.constants = {\r\n    MAX_LENGTH: safer.kMaxLength\r\n  }\r\n  if (safer.kStringMaxLength) {\r\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\r\n  }\r\n}\r\n\r\nmodule.exports = safer\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/safer-buffer/safer.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}}],"sources":{"../../node_modules/safer-buffer/safer.js":"/* eslint-disable node/no-deprecated-api */\r\n\r\n'use strict'\r\n\r\nvar buffer = require('buffer')\r\nvar Buffer = buffer.Buffer\r\n\r\nvar safer = {}\r\n\r\nvar key\r\n\r\nfor (key in buffer) {\r\n  if (!buffer.hasOwnProperty(key)) continue\r\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\r\n  safer[key] = buffer[key]\r\n}\r\n\r\nvar Safer = safer.Buffer = {}\r\nfor (key in Buffer) {\r\n  if (!Buffer.hasOwnProperty(key)) continue\r\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\r\n  Safer[key] = Buffer[key]\r\n}\r\n\r\nsafer.Buffer.prototype = Buffer.prototype\r\n\r\nif (!Safer.from || Safer.from === Uint8Array.from) {\r\n  Safer.from = function (value, encodingOrOffset, length) {\r\n    if (typeof value === 'number') {\r\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\r\n    }\r\n    if (value && typeof value.length === 'undefined') {\r\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\r\n    }\r\n    return Buffer(value, encodingOrOffset, length)\r\n  }\r\n}\r\n\r\nif (!Safer.alloc) {\r\n  Safer.alloc = function (size, fill, encoding) {\r\n    if (typeof size !== 'number') {\r\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\r\n    }\r\n    if (size < 0 || size >= 2 * (1 << 30)) {\r\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\r\n    }\r\n    var buf = Buffer(size)\r\n    if (!fill || fill.length === 0) {\r\n      buf.fill(0)\r\n    } else if (typeof encoding === 'string') {\r\n      buf.fill(fill, encoding)\r\n    } else {\r\n      buf.fill(fill)\r\n    }\r\n    return buf\r\n  }\r\n}\r\n\r\nif (!safer.kStringMaxLength) {\r\n  try {\r\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\r\n  } catch (e) {\r\n    // we can't determine kStringMaxLength in environments where process.binding\r\n    // is unsupported, so let's not set it\r\n  }\r\n}\r\n\r\nif (!safer.constants) {\r\n  safer.constants = {\r\n    MAX_LENGTH: safer.kMaxLength\r\n  }\r\n  if (safer.kStringMaxLength) {\r\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\r\n  }\r\n}\r\n\r\nmodule.exports = safer\r\n"},"lineCount":80}},"error":null,"hash":"c5f3a88ec81e2eae4f703a22e237f2ad","cacheData":{"env":{}}}