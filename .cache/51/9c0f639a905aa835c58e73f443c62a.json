{"id":"../../node_modules/browserify-cipher/browser.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-cipher\\package.json","includedInParent":true,"mtime":1684371838485},{"name":"browserify-des","loc":{"line":1,"column":18,"index":18},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-cipher\\browser.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-des\\index.js"},{"name":"browserify-aes/browser","loc":{"line":2,"column":18,"index":55},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-cipher\\browser.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\browser.js"},{"name":"browserify-aes/modes","loc":{"line":3,"column":23,"index":105},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-cipher\\browser.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-aes\\modes\\index.js"},{"name":"browserify-des/modes","loc":{"line":4,"column":23,"index":153},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-cipher\\browser.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-des\\modes.js"},{"name":"evp_bytestokey","loc":{"line":5,"column":19,"index":197},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\browserify-cipher\\browser.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\evp_bytestokey\\index.js"}],"generated":{"js":"var DES = require('browserify-des')\r\nvar aes = require('browserify-aes/browser')\r\nvar aesModes = require('browserify-aes/modes')\r\nvar desModes = require('browserify-des/modes')\r\nvar ebtk = require('evp_bytestokey')\r\n\r\nfunction createCipher (suite, password) {\r\n  suite = suite.toLowerCase()\r\n\r\n  var keyLen, ivLen\r\n  if (aesModes[suite]) {\r\n    keyLen = aesModes[suite].key\r\n    ivLen = aesModes[suite].iv\r\n  } else if (desModes[suite]) {\r\n    keyLen = desModes[suite].key * 8\r\n    ivLen = desModes[suite].iv\r\n  } else {\r\n    throw new TypeError('invalid suite type')\r\n  }\r\n\r\n  var keys = ebtk(password, false, keyLen, ivLen)\r\n  return createCipheriv(suite, keys.key, keys.iv)\r\n}\r\n\r\nfunction createDecipher (suite, password) {\r\n  suite = suite.toLowerCase()\r\n\r\n  var keyLen, ivLen\r\n  if (aesModes[suite]) {\r\n    keyLen = aesModes[suite].key\r\n    ivLen = aesModes[suite].iv\r\n  } else if (desModes[suite]) {\r\n    keyLen = desModes[suite].key * 8\r\n    ivLen = desModes[suite].iv\r\n  } else {\r\n    throw new TypeError('invalid suite type')\r\n  }\r\n\r\n  var keys = ebtk(password, false, keyLen, ivLen)\r\n  return createDecipheriv(suite, keys.key, keys.iv)\r\n}\r\n\r\nfunction createCipheriv (suite, key, iv) {\r\n  suite = suite.toLowerCase()\r\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\r\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\r\n\r\n  throw new TypeError('invalid suite type')\r\n}\r\n\r\nfunction createDecipheriv (suite, key, iv) {\r\n  suite = suite.toLowerCase()\r\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\r\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\r\n\r\n  throw new TypeError('invalid suite type')\r\n}\r\n\r\nfunction getCiphers () {\r\n  return Object.keys(desModes).concat(aes.getCiphers())\r\n}\r\n\r\nexports.createCipher = exports.Cipher = createCipher\r\nexports.createCipheriv = exports.Cipheriv = createCipheriv\r\nexports.createDecipher = exports.Decipher = createDecipher\r\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\r\nexports.listCiphers = exports.getCiphers = getCiphers\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/browserify-cipher/browser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}}],"sources":{"../../node_modules/browserify-cipher/browser.js":"var DES = require('browserify-des')\r\nvar aes = require('browserify-aes/browser')\r\nvar aesModes = require('browserify-aes/modes')\r\nvar desModes = require('browserify-des/modes')\r\nvar ebtk = require('evp_bytestokey')\r\n\r\nfunction createCipher (suite, password) {\r\n  suite = suite.toLowerCase()\r\n\r\n  var keyLen, ivLen\r\n  if (aesModes[suite]) {\r\n    keyLen = aesModes[suite].key\r\n    ivLen = aesModes[suite].iv\r\n  } else if (desModes[suite]) {\r\n    keyLen = desModes[suite].key * 8\r\n    ivLen = desModes[suite].iv\r\n  } else {\r\n    throw new TypeError('invalid suite type')\r\n  }\r\n\r\n  var keys = ebtk(password, false, keyLen, ivLen)\r\n  return createCipheriv(suite, keys.key, keys.iv)\r\n}\r\n\r\nfunction createDecipher (suite, password) {\r\n  suite = suite.toLowerCase()\r\n\r\n  var keyLen, ivLen\r\n  if (aesModes[suite]) {\r\n    keyLen = aesModes[suite].key\r\n    ivLen = aesModes[suite].iv\r\n  } else if (desModes[suite]) {\r\n    keyLen = desModes[suite].key * 8\r\n    ivLen = desModes[suite].iv\r\n  } else {\r\n    throw new TypeError('invalid suite type')\r\n  }\r\n\r\n  var keys = ebtk(password, false, keyLen, ivLen)\r\n  return createDecipheriv(suite, keys.key, keys.iv)\r\n}\r\n\r\nfunction createCipheriv (suite, key, iv) {\r\n  suite = suite.toLowerCase()\r\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\r\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\r\n\r\n  throw new TypeError('invalid suite type')\r\n}\r\n\r\nfunction createDecipheriv (suite, key, iv) {\r\n  suite = suite.toLowerCase()\r\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\r\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\r\n\r\n  throw new TypeError('invalid suite type')\r\n}\r\n\r\nfunction getCiphers () {\r\n  return Object.keys(desModes).concat(aes.getCiphers())\r\n}\r\n\r\nexports.createCipher = exports.Cipher = createCipher\r\nexports.createCipheriv = exports.Cipheriv = createCipheriv\r\nexports.createDecipher = exports.Decipher = createDecipher\r\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\r\nexports.listCiphers = exports.getCiphers = getCiphers\r\n"},"lineCount":68}},"error":null,"hash":"649eb8ebf7188c0795748be94e6b747b","cacheData":{"env":{}}}