{"dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1685934625119},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1684371840936},{"name":"./_math-sign","loc":{"line":2,"column":19}}],"generated":{"js":"// 20.2.2.16 Math.fround(x)\r\nvar sign = require('./_math-sign');\r\nvar pow = Math.pow;\r\nvar EPSILON = pow(2, -52);\r\nvar EPSILON32 = pow(2, -23);\r\nvar MAX32 = pow(2, 127) * (2 - EPSILON32);\r\nvar MIN32 = pow(2, -126);\r\n\r\nvar roundTiesToEven = function (n) {\r\n  return n + 1 / EPSILON - 1 / EPSILON;\r\n};\r\n\r\nmodule.exports = Math.fround || function fround(x) {\r\n  var $abs = Math.abs(x);\r\n  var $sign = sign(x);\r\n  var a, result;\r\n  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\r\n  a = (1 + EPSILON32 / EPSILON) * $abs;\r\n  result = a - (a - $abs);\r\n  // eslint-disable-next-line no-self-compare\r\n  if (result > MAX32 || result != result) return $sign * Infinity;\r\n  return $sign * result;\r\n};\r\n","map":{"mappings":[{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_math-fround.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"..\\..\\node_modules\\core-js\\modules\\_math-fround.js":"// 20.2.2.16 Math.fround(x)\r\nvar sign = require('./_math-sign');\r\nvar pow = Math.pow;\r\nvar EPSILON = pow(2, -52);\r\nvar EPSILON32 = pow(2, -23);\r\nvar MAX32 = pow(2, 127) * (2 - EPSILON32);\r\nvar MIN32 = pow(2, -126);\r\n\r\nvar roundTiesToEven = function (n) {\r\n  return n + 1 / EPSILON - 1 / EPSILON;\r\n};\r\n\r\nmodule.exports = Math.fround || function fround(x) {\r\n  var $abs = Math.abs(x);\r\n  var $sign = sign(x);\r\n  var a, result;\r\n  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\r\n  a = (1 + EPSILON32 / EPSILON) * $abs;\r\n  result = a - (a - $abs);\r\n  // eslint-disable-next-line no-self-compare\r\n  if (result > MAX32 || result != result) return $sign * Infinity;\r\n  return $sign * result;\r\n};\r\n"},"lineCount":24}},"hash":"4bc5671f9eec5f20f2bc06295a8247a8","cacheData":{"env":{}}}