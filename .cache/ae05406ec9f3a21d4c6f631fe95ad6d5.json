{"dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1685934625119},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1684371840936},{"name":"./_a-function","loc":{"line":1,"column":24}},{"name":"./_to-object","loc":{"line":2,"column":23}},{"name":"./_iobject","loc":{"line":3,"column":22}},{"name":"./_to-length","loc":{"line":4,"column":23}}],"generated":{"js":"var aFunction = require('./_a-function');\r\nvar toObject = require('./_to-object');\r\nvar IObject = require('./_iobject');\r\nvar toLength = require('./_to-length');\r\n\r\nmodule.exports = function (that, callbackfn, aLen, memo, isRight) {\r\n  aFunction(callbackfn);\r\n  var O = toObject(that);\r\n  var self = IObject(O);\r\n  var length = toLength(O.length);\r\n  var index = isRight ? length - 1 : 0;\r\n  var i = isRight ? -1 : 1;\r\n  if (aLen < 2) for (;;) {\r\n    if (index in self) {\r\n      memo = self[index];\r\n      index += i;\r\n      break;\r\n    }\r\n    index += i;\r\n    if (isRight ? index < 0 : length <= index) {\r\n      throw TypeError('Reduce of empty array with no initial value');\r\n    }\r\n  }\r\n  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {\r\n    memo = callbackfn(memo, self[index], index, O);\r\n  }\r\n  return memo;\r\n};\r\n","map":{"mappings":[{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"..\\..\\node_modules\\core-js\\modules\\_array-reduce.js":"var aFunction = require('./_a-function');\r\nvar toObject = require('./_to-object');\r\nvar IObject = require('./_iobject');\r\nvar toLength = require('./_to-length');\r\n\r\nmodule.exports = function (that, callbackfn, aLen, memo, isRight) {\r\n  aFunction(callbackfn);\r\n  var O = toObject(that);\r\n  var self = IObject(O);\r\n  var length = toLength(O.length);\r\n  var index = isRight ? length - 1 : 0;\r\n  var i = isRight ? -1 : 1;\r\n  if (aLen < 2) for (;;) {\r\n    if (index in self) {\r\n      memo = self[index];\r\n      index += i;\r\n      break;\r\n    }\r\n    index += i;\r\n    if (isRight ? index < 0 : length <= index) {\r\n      throw TypeError('Reduce of empty array with no initial value');\r\n    }\r\n  }\r\n  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {\r\n    memo = callbackfn(memo, self[index], index, O);\r\n  }\r\n  return memo;\r\n};\r\n"},"lineCount":29}},"hash":"f424f4393dcfe9a04ca1fc4e9cf63458","cacheData":{"env":{}}}