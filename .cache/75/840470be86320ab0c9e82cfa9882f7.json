{"id":"../../node_modules/string_decoder/lib/string_decoder.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\string_decoder\\package.json","includedInParent":true,"mtime":1684371862583},{"name":"safe-buffer","loc":{"line":26,"column":21,"index":1214},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\string_decoder\\lib\\string_decoder.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\string_decoder\\node_modules\\safe-buffer\\index.js"}],"generated":{"js":"\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\n/*<replacement>*/\r\n\r\nvar Buffer = require('safe-buffer').Buffer;\r\n/*</replacement>*/\r\n\r\nvar isEncoding = Buffer.isEncoding || function (encoding) {\r\n  encoding = '' + encoding;\r\n  switch (encoding && encoding.toLowerCase()) {\r\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nfunction _normalizeEncoding(enc) {\r\n  if (!enc) return 'utf8';\r\n  var retried;\r\n  while (true) {\r\n    switch (enc) {\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return 'utf8';\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return 'utf16le';\r\n      case 'latin1':\r\n      case 'binary':\r\n        return 'latin1';\r\n      case 'base64':\r\n      case 'ascii':\r\n      case 'hex':\r\n        return enc;\r\n      default:\r\n        if (retried) return; // undefined\r\n        enc = ('' + enc).toLowerCase();\r\n        retried = true;\r\n    }\r\n  }\r\n};\r\n\r\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\r\n// modules monkey-patch it to support additional encodings\r\nfunction normalizeEncoding(enc) {\r\n  var nenc = _normalizeEncoding(enc);\r\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\r\n  return nenc || enc;\r\n}\r\n\r\n// StringDecoder provides an interface for efficiently splitting a series of\r\n// buffers into a series of JS strings without breaking apart multi-byte\r\n// characters.\r\nexports.StringDecoder = StringDecoder;\r\nfunction StringDecoder(encoding) {\r\n  this.encoding = normalizeEncoding(encoding);\r\n  var nb;\r\n  switch (this.encoding) {\r\n    case 'utf16le':\r\n      this.text = utf16Text;\r\n      this.end = utf16End;\r\n      nb = 4;\r\n      break;\r\n    case 'utf8':\r\n      this.fillLast = utf8FillLast;\r\n      nb = 4;\r\n      break;\r\n    case 'base64':\r\n      this.text = base64Text;\r\n      this.end = base64End;\r\n      nb = 3;\r\n      break;\r\n    default:\r\n      this.write = simpleWrite;\r\n      this.end = simpleEnd;\r\n      return;\r\n  }\r\n  this.lastNeed = 0;\r\n  this.lastTotal = 0;\r\n  this.lastChar = Buffer.allocUnsafe(nb);\r\n}\r\n\r\nStringDecoder.prototype.write = function (buf) {\r\n  if (buf.length === 0) return '';\r\n  var r;\r\n  var i;\r\n  if (this.lastNeed) {\r\n    r = this.fillLast(buf);\r\n    if (r === undefined) return '';\r\n    i = this.lastNeed;\r\n    this.lastNeed = 0;\r\n  } else {\r\n    i = 0;\r\n  }\r\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\r\n  return r || '';\r\n};\r\n\r\nStringDecoder.prototype.end = utf8End;\r\n\r\n// Returns only complete characters in a Buffer\r\nStringDecoder.prototype.text = utf8Text;\r\n\r\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\r\nStringDecoder.prototype.fillLast = function (buf) {\r\n  if (this.lastNeed <= buf.length) {\r\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\r\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\r\n  }\r\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\r\n  this.lastNeed -= buf.length;\r\n};\r\n\r\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\r\n// continuation byte. If an invalid byte is detected, -2 is returned.\r\nfunction utf8CheckByte(byte) {\r\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\r\n  return byte >> 6 === 0x02 ? -1 : -2;\r\n}\r\n\r\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\r\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\r\n// needed to complete the UTF-8 character (if applicable) are returned.\r\nfunction utf8CheckIncomplete(self, buf, i) {\r\n  var j = buf.length - 1;\r\n  if (j < i) return 0;\r\n  var nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) self.lastNeed = nb - 1;\r\n    return nb;\r\n  }\r\n  if (--j < i || nb === -2) return 0;\r\n  nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) self.lastNeed = nb - 2;\r\n    return nb;\r\n  }\r\n  if (--j < i || nb === -2) return 0;\r\n  nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) {\r\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\r\n    }\r\n    return nb;\r\n  }\r\n  return 0;\r\n}\r\n\r\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\r\n// needed or are available. If we see a non-continuation byte where we expect\r\n// one, we \"replace\" the validated continuation bytes we've seen so far with\r\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\r\n// behavior. The continuation byte check is included three times in the case\r\n// where all of the continuation bytes for a character exist in the same buffer.\r\n// It is also done this way as a slight performance increase instead of using a\r\n// loop.\r\nfunction utf8CheckExtraBytes(self, buf, p) {\r\n  if ((buf[0] & 0xC0) !== 0x80) {\r\n    self.lastNeed = 0;\r\n    return '\\ufffd';\r\n  }\r\n  if (self.lastNeed > 1 && buf.length > 1) {\r\n    if ((buf[1] & 0xC0) !== 0x80) {\r\n      self.lastNeed = 1;\r\n      return '\\ufffd';\r\n    }\r\n    if (self.lastNeed > 2 && buf.length > 2) {\r\n      if ((buf[2] & 0xC0) !== 0x80) {\r\n        self.lastNeed = 2;\r\n        return '\\ufffd';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\r\nfunction utf8FillLast(buf) {\r\n  var p = this.lastTotal - this.lastNeed;\r\n  var r = utf8CheckExtraBytes(this, buf, p);\r\n  if (r !== undefined) return r;\r\n  if (this.lastNeed <= buf.length) {\r\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\r\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\r\n  }\r\n  buf.copy(this.lastChar, p, 0, buf.length);\r\n  this.lastNeed -= buf.length;\r\n}\r\n\r\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\r\n// partial character, the character's bytes are buffered until the required\r\n// number of bytes are available.\r\nfunction utf8Text(buf, i) {\r\n  var total = utf8CheckIncomplete(this, buf, i);\r\n  if (!this.lastNeed) return buf.toString('utf8', i);\r\n  this.lastTotal = total;\r\n  var end = buf.length - (total - this.lastNeed);\r\n  buf.copy(this.lastChar, 0, end);\r\n  return buf.toString('utf8', i, end);\r\n}\r\n\r\n// For UTF-8, a replacement character is added when ending on a partial\r\n// character.\r\nfunction utf8End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) return r + '\\ufffd';\r\n  return r;\r\n}\r\n\r\n// UTF-16LE typically needs two bytes per character, but even if we have an even\r\n// number of bytes available, we need to check if we end on a leading/high\r\n// surrogate. In that case, we need to wait for the next two bytes in order to\r\n// decode the last character properly.\r\nfunction utf16Text(buf, i) {\r\n  if ((buf.length - i) % 2 === 0) {\r\n    var r = buf.toString('utf16le', i);\r\n    if (r) {\r\n      var c = r.charCodeAt(r.length - 1);\r\n      if (c >= 0xD800 && c <= 0xDBFF) {\r\n        this.lastNeed = 2;\r\n        this.lastTotal = 4;\r\n        this.lastChar[0] = buf[buf.length - 2];\r\n        this.lastChar[1] = buf[buf.length - 1];\r\n        return r.slice(0, -1);\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n  this.lastNeed = 1;\r\n  this.lastTotal = 2;\r\n  this.lastChar[0] = buf[buf.length - 1];\r\n  return buf.toString('utf16le', i, buf.length - 1);\r\n}\r\n\r\n// For UTF-16LE we do not explicitly append special replacement characters if we\r\n// end on a partial character, we simply let v8 handle that.\r\nfunction utf16End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) {\r\n    var end = this.lastTotal - this.lastNeed;\r\n    return r + this.lastChar.toString('utf16le', 0, end);\r\n  }\r\n  return r;\r\n}\r\n\r\nfunction base64Text(buf, i) {\r\n  var n = (buf.length - i) % 3;\r\n  if (n === 0) return buf.toString('base64', i);\r\n  this.lastNeed = 3 - n;\r\n  this.lastTotal = 3;\r\n  if (n === 1) {\r\n    this.lastChar[0] = buf[buf.length - 1];\r\n  } else {\r\n    this.lastChar[0] = buf[buf.length - 2];\r\n    this.lastChar[1] = buf[buf.length - 1];\r\n  }\r\n  return buf.toString('base64', i, buf.length - n);\r\n}\r\n\r\nfunction base64End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\r\n  return r;\r\n}\r\n\r\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\r\nfunction simpleWrite(buf) {\r\n  return buf.toString(this.encoding);\r\n}\r\n\r\nfunction simpleEnd(buf) {\r\n  return buf && buf.length ? this.write(buf) : '';\r\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/string_decoder/lib/string_decoder.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}}],"sources":{"../../node_modules/string_decoder/lib/string_decoder.js":"// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\n/*<replacement>*/\r\n\r\nvar Buffer = require('safe-buffer').Buffer;\r\n/*</replacement>*/\r\n\r\nvar isEncoding = Buffer.isEncoding || function (encoding) {\r\n  encoding = '' + encoding;\r\n  switch (encoding && encoding.toLowerCase()) {\r\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nfunction _normalizeEncoding(enc) {\r\n  if (!enc) return 'utf8';\r\n  var retried;\r\n  while (true) {\r\n    switch (enc) {\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return 'utf8';\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return 'utf16le';\r\n      case 'latin1':\r\n      case 'binary':\r\n        return 'latin1';\r\n      case 'base64':\r\n      case 'ascii':\r\n      case 'hex':\r\n        return enc;\r\n      default:\r\n        if (retried) return; // undefined\r\n        enc = ('' + enc).toLowerCase();\r\n        retried = true;\r\n    }\r\n  }\r\n};\r\n\r\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\r\n// modules monkey-patch it to support additional encodings\r\nfunction normalizeEncoding(enc) {\r\n  var nenc = _normalizeEncoding(enc);\r\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\r\n  return nenc || enc;\r\n}\r\n\r\n// StringDecoder provides an interface for efficiently splitting a series of\r\n// buffers into a series of JS strings without breaking apart multi-byte\r\n// characters.\r\nexports.StringDecoder = StringDecoder;\r\nfunction StringDecoder(encoding) {\r\n  this.encoding = normalizeEncoding(encoding);\r\n  var nb;\r\n  switch (this.encoding) {\r\n    case 'utf16le':\r\n      this.text = utf16Text;\r\n      this.end = utf16End;\r\n      nb = 4;\r\n      break;\r\n    case 'utf8':\r\n      this.fillLast = utf8FillLast;\r\n      nb = 4;\r\n      break;\r\n    case 'base64':\r\n      this.text = base64Text;\r\n      this.end = base64End;\r\n      nb = 3;\r\n      break;\r\n    default:\r\n      this.write = simpleWrite;\r\n      this.end = simpleEnd;\r\n      return;\r\n  }\r\n  this.lastNeed = 0;\r\n  this.lastTotal = 0;\r\n  this.lastChar = Buffer.allocUnsafe(nb);\r\n}\r\n\r\nStringDecoder.prototype.write = function (buf) {\r\n  if (buf.length === 0) return '';\r\n  var r;\r\n  var i;\r\n  if (this.lastNeed) {\r\n    r = this.fillLast(buf);\r\n    if (r === undefined) return '';\r\n    i = this.lastNeed;\r\n    this.lastNeed = 0;\r\n  } else {\r\n    i = 0;\r\n  }\r\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\r\n  return r || '';\r\n};\r\n\r\nStringDecoder.prototype.end = utf8End;\r\n\r\n// Returns only complete characters in a Buffer\r\nStringDecoder.prototype.text = utf8Text;\r\n\r\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\r\nStringDecoder.prototype.fillLast = function (buf) {\r\n  if (this.lastNeed <= buf.length) {\r\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\r\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\r\n  }\r\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\r\n  this.lastNeed -= buf.length;\r\n};\r\n\r\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\r\n// continuation byte. If an invalid byte is detected, -2 is returned.\r\nfunction utf8CheckByte(byte) {\r\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\r\n  return byte >> 6 === 0x02 ? -1 : -2;\r\n}\r\n\r\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\r\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\r\n// needed to complete the UTF-8 character (if applicable) are returned.\r\nfunction utf8CheckIncomplete(self, buf, i) {\r\n  var j = buf.length - 1;\r\n  if (j < i) return 0;\r\n  var nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) self.lastNeed = nb - 1;\r\n    return nb;\r\n  }\r\n  if (--j < i || nb === -2) return 0;\r\n  nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) self.lastNeed = nb - 2;\r\n    return nb;\r\n  }\r\n  if (--j < i || nb === -2) return 0;\r\n  nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) {\r\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\r\n    }\r\n    return nb;\r\n  }\r\n  return 0;\r\n}\r\n\r\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\r\n// needed or are available. If we see a non-continuation byte where we expect\r\n// one, we \"replace\" the validated continuation bytes we've seen so far with\r\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\r\n// behavior. The continuation byte check is included three times in the case\r\n// where all of the continuation bytes for a character exist in the same buffer.\r\n// It is also done this way as a slight performance increase instead of using a\r\n// loop.\r\nfunction utf8CheckExtraBytes(self, buf, p) {\r\n  if ((buf[0] & 0xC0) !== 0x80) {\r\n    self.lastNeed = 0;\r\n    return '\\ufffd';\r\n  }\r\n  if (self.lastNeed > 1 && buf.length > 1) {\r\n    if ((buf[1] & 0xC0) !== 0x80) {\r\n      self.lastNeed = 1;\r\n      return '\\ufffd';\r\n    }\r\n    if (self.lastNeed > 2 && buf.length > 2) {\r\n      if ((buf[2] & 0xC0) !== 0x80) {\r\n        self.lastNeed = 2;\r\n        return '\\ufffd';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\r\nfunction utf8FillLast(buf) {\r\n  var p = this.lastTotal - this.lastNeed;\r\n  var r = utf8CheckExtraBytes(this, buf, p);\r\n  if (r !== undefined) return r;\r\n  if (this.lastNeed <= buf.length) {\r\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\r\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\r\n  }\r\n  buf.copy(this.lastChar, p, 0, buf.length);\r\n  this.lastNeed -= buf.length;\r\n}\r\n\r\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\r\n// partial character, the character's bytes are buffered until the required\r\n// number of bytes are available.\r\nfunction utf8Text(buf, i) {\r\n  var total = utf8CheckIncomplete(this, buf, i);\r\n  if (!this.lastNeed) return buf.toString('utf8', i);\r\n  this.lastTotal = total;\r\n  var end = buf.length - (total - this.lastNeed);\r\n  buf.copy(this.lastChar, 0, end);\r\n  return buf.toString('utf8', i, end);\r\n}\r\n\r\n// For UTF-8, a replacement character is added when ending on a partial\r\n// character.\r\nfunction utf8End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) return r + '\\ufffd';\r\n  return r;\r\n}\r\n\r\n// UTF-16LE typically needs two bytes per character, but even if we have an even\r\n// number of bytes available, we need to check if we end on a leading/high\r\n// surrogate. In that case, we need to wait for the next two bytes in order to\r\n// decode the last character properly.\r\nfunction utf16Text(buf, i) {\r\n  if ((buf.length - i) % 2 === 0) {\r\n    var r = buf.toString('utf16le', i);\r\n    if (r) {\r\n      var c = r.charCodeAt(r.length - 1);\r\n      if (c >= 0xD800 && c <= 0xDBFF) {\r\n        this.lastNeed = 2;\r\n        this.lastTotal = 4;\r\n        this.lastChar[0] = buf[buf.length - 2];\r\n        this.lastChar[1] = buf[buf.length - 1];\r\n        return r.slice(0, -1);\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n  this.lastNeed = 1;\r\n  this.lastTotal = 2;\r\n  this.lastChar[0] = buf[buf.length - 1];\r\n  return buf.toString('utf16le', i, buf.length - 1);\r\n}\r\n\r\n// For UTF-16LE we do not explicitly append special replacement characters if we\r\n// end on a partial character, we simply let v8 handle that.\r\nfunction utf16End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) {\r\n    var end = this.lastTotal - this.lastNeed;\r\n    return r + this.lastChar.toString('utf16le', 0, end);\r\n  }\r\n  return r;\r\n}\r\n\r\nfunction base64Text(buf, i) {\r\n  var n = (buf.length - i) % 3;\r\n  if (n === 0) return buf.toString('base64', i);\r\n  this.lastNeed = 3 - n;\r\n  this.lastTotal = 3;\r\n  if (n === 1) {\r\n    this.lastChar[0] = buf[buf.length - 1];\r\n  } else {\r\n    this.lastChar[0] = buf[buf.length - 2];\r\n    this.lastChar[1] = buf[buf.length - 1];\r\n  }\r\n  return buf.toString('base64', i, buf.length - n);\r\n}\r\n\r\nfunction base64End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\r\n  return r;\r\n}\r\n\r\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\r\nfunction simpleWrite(buf) {\r\n  return buf.toString(this.encoding);\r\n}\r\n\r\nfunction simpleEnd(buf) {\r\n  return buf && buf.length ? this.write(buf) : '';\r\n}"},"lineCount":297}},"error":null,"hash":"2087245307f18f52ad5d770f4164a869","cacheData":{"env":{}}}