{"id":"../../node_modules/stripe/cjs/multipart.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\stripe\\cjs\\package.json","includedInParent":true,"mtime":1686031678189},{"name":"./utils.js","loc":{"line":4,"column":27,"index":152},"parent":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\stripe\\cjs\\multipart.js","resolved":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\stripe\\cjs\\utils.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.multipartRequestDataProcessor = void 0;\nconst utils_js_1 = require(\"./utils.js\");\n// Method for formatting HTTP body for the multipart/form-data specification\n// Mostly taken from Fermata.js\n// https://github.com/natevw/fermata/blob/5d9732a33d776ce925013a265935facd1626cc88/fermata.js#L315-L343\nconst multipartDataGenerator = (method, data, headers) => {\n    const segno = (Math.round(Math.random() * 1e16) + Math.round(Math.random() * 1e16)).toString();\n    headers['Content-Type'] = `multipart/form-data; boundary=${segno}`;\n    const textEncoder = new TextEncoder();\n    let buffer = new Uint8Array(0);\n    const endBuffer = textEncoder.encode('\\r\\n');\n    function push(l) {\n        const prevBuffer = buffer;\n        const newBuffer = l instanceof Uint8Array ? l : new Uint8Array(textEncoder.encode(l));\n        buffer = new Uint8Array(prevBuffer.length + newBuffer.length + 2);\n        buffer.set(prevBuffer);\n        buffer.set(newBuffer, prevBuffer.length);\n        buffer.set(endBuffer, buffer.length - 2);\n    }\n    function q(s) {\n        return `\"${s.replace(/\"|\"/g, '%22').replace(/\\r\\n|\\r|\\n/g, ' ')}\"`;\n    }\n    const flattenedData = (0, utils_js_1.flattenAndStringify)(data);\n    for (const k in flattenedData) {\n        const v = flattenedData[k];\n        push(`--${segno}`);\n        if (Object.prototype.hasOwnProperty.call(v, 'data')) {\n            const typedEntry = v;\n            push(`Content-Disposition: form-data; name=${q(k)}; filename=${q(typedEntry.name || 'blob')}`);\n            push(`Content-Type: ${typedEntry.type || 'application/octet-stream'}`);\n            push('');\n            push(typedEntry.data);\n        }\n        else {\n            push(`Content-Disposition: form-data; name=${q(k)}`);\n            push('');\n            push(v);\n        }\n    }\n    push(`--${segno}--`);\n    return buffer;\n};\nfunction multipartRequestDataProcessor(method, data, headers, callback) {\n    data = data || {};\n    if (method !== 'POST') {\n        return callback(null, (0, utils_js_1.stringifyRequestData)(data));\n    }\n    this._stripe._platformFunctions\n        .tryBufferData(data)\n        .then((bufferedData) => {\n        const buffer = multipartDataGenerator(method, bufferedData, headers);\n        return callback(null, buffer);\n    })\n        .catch((err) => callback(err, null));\n}\nexports.multipartRequestDataProcessor = multipartRequestDataProcessor;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/stripe/cjs/multipart.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}}],"sources":{"../../node_modules/stripe/cjs/multipart.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.multipartRequestDataProcessor = void 0;\nconst utils_js_1 = require(\"./utils.js\");\n// Method for formatting HTTP body for the multipart/form-data specification\n// Mostly taken from Fermata.js\n// https://github.com/natevw/fermata/blob/5d9732a33d776ce925013a265935facd1626cc88/fermata.js#L315-L343\nconst multipartDataGenerator = (method, data, headers) => {\n    const segno = (Math.round(Math.random() * 1e16) + Math.round(Math.random() * 1e16)).toString();\n    headers['Content-Type'] = `multipart/form-data; boundary=${segno}`;\n    const textEncoder = new TextEncoder();\n    let buffer = new Uint8Array(0);\n    const endBuffer = textEncoder.encode('\\r\\n');\n    function push(l) {\n        const prevBuffer = buffer;\n        const newBuffer = l instanceof Uint8Array ? l : new Uint8Array(textEncoder.encode(l));\n        buffer = new Uint8Array(prevBuffer.length + newBuffer.length + 2);\n        buffer.set(prevBuffer);\n        buffer.set(newBuffer, prevBuffer.length);\n        buffer.set(endBuffer, buffer.length - 2);\n    }\n    function q(s) {\n        return `\"${s.replace(/\"|\"/g, '%22').replace(/\\r\\n|\\r|\\n/g, ' ')}\"`;\n    }\n    const flattenedData = (0, utils_js_1.flattenAndStringify)(data);\n    for (const k in flattenedData) {\n        const v = flattenedData[k];\n        push(`--${segno}`);\n        if (Object.prototype.hasOwnProperty.call(v, 'data')) {\n            const typedEntry = v;\n            push(`Content-Disposition: form-data; name=${q(k)}; filename=${q(typedEntry.name || 'blob')}`);\n            push(`Content-Type: ${typedEntry.type || 'application/octet-stream'}`);\n            push('');\n            push(typedEntry.data);\n        }\n        else {\n            push(`Content-Disposition: form-data; name=${q(k)}`);\n            push('');\n            push(v);\n        }\n    }\n    push(`--${segno}--`);\n    return buffer;\n};\nfunction multipartRequestDataProcessor(method, data, headers, callback) {\n    data = data || {};\n    if (method !== 'POST') {\n        return callback(null, (0, utils_js_1.stringifyRequestData)(data));\n    }\n    this._stripe._platformFunctions\n        .tryBufferData(data)\n        .then((bufferedData) => {\n        const buffer = multipartDataGenerator(method, bufferedData, headers);\n        return callback(null, buffer);\n    })\n        .catch((err) => callback(err, null));\n}\nexports.multipartRequestDataProcessor = multipartRequestDataProcessor;\n"},"lineCount":59}},"error":null,"hash":"603adebde1d19875545cc7bc3af763c9","cacheData":{"env":{}}}