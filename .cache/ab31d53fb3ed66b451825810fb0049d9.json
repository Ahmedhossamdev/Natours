{"dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1685934625119},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1684371840936},{"name":"./_is-object","loc":{"line":2,"column":23}}],"generated":{"js":"// 7.1.1 ToPrimitive(input [, PreferredType])\r\nvar isObject = require('./_is-object');\r\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\r\n// and the second argument - flag - preferred type is a string\r\nmodule.exports = function (it, S) {\r\n  if (!isObject(it)) return it;\r\n  var fn, val;\r\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  throw TypeError(\"Can't convert object to primitive value\");\r\n};\r\n","map":{"mappings":[{"source":"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}}],"sources":{"..\\..\\node_modules\\core-js\\library\\modules\\_to-primitive.js":"// 7.1.1 ToPrimitive(input [, PreferredType])\r\nvar isObject = require('./_is-object');\r\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\r\n// and the second argument - flag - preferred type is a string\r\nmodule.exports = function (it, S) {\r\n  if (!isObject(it)) return it;\r\n  var fn, val;\r\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  throw TypeError(\"Can't convert object to primitive value\");\r\n};\r\n"},"lineCount":13}},"hash":"a0be30cc0d50c5def564342c94b9e1fb","cacheData":{"env":{}}}