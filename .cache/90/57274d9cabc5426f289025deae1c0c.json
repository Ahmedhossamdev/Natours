{"id":"../../node_modules/stripe/cjs/net/HttpClient.js","dependencies":[{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\package.json","includedInParent":true,"mtime":1686110905962},{"name":"C:\\Users\\Ahmed\\Desktop\\Natours\\node_modules\\stripe\\cjs\\package.json","includedInParent":true,"mtime":1686031678189}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpClientResponse = exports.HttpClient = void 0;\n/**\n * Encapsulates the logic for issuing a request to the Stripe API.\n *\n * A custom HTTP client should should implement:\n * 1. A response class which extends HttpClientResponse and wraps around their\n *    own internal representation of a response.\n * 2. A client class which extends HttpClient and implements all methods,\n *    returning their own response class when making requests.\n */\nclass HttpClient {\n    /** The client name used for diagnostics. */\n    getClientName() {\n        throw new Error('getClientName not implemented.');\n    }\n    makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        throw new Error('makeRequest not implemented.');\n    }\n    /** Helper to make a consistent timeout error across implementations. */\n    static makeTimeoutError() {\n        const timeoutErr = new TypeError(HttpClient.TIMEOUT_ERROR_CODE);\n        timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n        return timeoutErr;\n    }\n}\nexports.HttpClient = HttpClient;\n// Public API accessible via Stripe.HttpClient\nHttpClient.CONNECTION_CLOSED_ERROR_CODES = ['ECONNRESET', 'EPIPE'];\nHttpClient.TIMEOUT_ERROR_CODE = 'ETIMEDOUT';\nclass HttpClientResponse {\n    constructor(statusCode, headers) {\n        this._statusCode = statusCode;\n        this._headers = headers;\n    }\n    getStatusCode() {\n        return this._statusCode;\n    }\n    getHeaders() {\n        return this._headers;\n    }\n    getRawResponse() {\n        throw new Error('getRawResponse not implemented.');\n    }\n    toStream(streamCompleteCallback) {\n        throw new Error('toStream not implemented.');\n    }\n    toJSON() {\n        throw new Error('toJSON not implemented.');\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/stripe/cjs/net/HttpClient.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}}],"sources":{"../../node_modules/stripe/cjs/net/HttpClient.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpClientResponse = exports.HttpClient = void 0;\n/**\n * Encapsulates the logic for issuing a request to the Stripe API.\n *\n * A custom HTTP client should should implement:\n * 1. A response class which extends HttpClientResponse and wraps around their\n *    own internal representation of a response.\n * 2. A client class which extends HttpClient and implements all methods,\n *    returning their own response class when making requests.\n */\nclass HttpClient {\n    /** The client name used for diagnostics. */\n    getClientName() {\n        throw new Error('getClientName not implemented.');\n    }\n    makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        throw new Error('makeRequest not implemented.');\n    }\n    /** Helper to make a consistent timeout error across implementations. */\n    static makeTimeoutError() {\n        const timeoutErr = new TypeError(HttpClient.TIMEOUT_ERROR_CODE);\n        timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n        return timeoutErr;\n    }\n}\nexports.HttpClient = HttpClient;\n// Public API accessible via Stripe.HttpClient\nHttpClient.CONNECTION_CLOSED_ERROR_CODES = ['ECONNRESET', 'EPIPE'];\nHttpClient.TIMEOUT_ERROR_CODE = 'ETIMEDOUT';\nclass HttpClientResponse {\n    constructor(statusCode, headers) {\n        this._statusCode = statusCode;\n        this._headers = headers;\n    }\n    getStatusCode() {\n        return this._statusCode;\n    }\n    getHeaders() {\n        return this._headers;\n    }\n    getRawResponse() {\n        throw new Error('getRawResponse not implemented.');\n    }\n    toStream(streamCompleteCallback) {\n        throw new Error('toStream not implemented.');\n    }\n    toJSON() {\n        throw new Error('toJSON not implemented.');\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\n"},"lineCount":54}},"error":null,"hash":"eaf68fb8d0e27ec195a2809d4d474a25","cacheData":{"env":{}}}